Name

    INTEL_fragment_shader_ordering

Name Strings

    GL_INTEL_fragment_shader_ordering

Contact

    Slawomir Grajewski, Intel  (slawomir.grajewski 'at' intel.com)

Contributors

    Tim Foley, Intel
    Brent Insko, Intel 
    Tomasz Janczak, Intel
    Marco Salvi, Intel 
    Larry Seiler, Intel
    Tomasz Poniecki, Intel

Status

    Draft.

Version

    Last Modified Date:        08/29/2013
    INTEL Revision:            3

Number

    OpenGL Extension #441

Dependencies

    This extension is written against the OpenGL 4.4 (Core Profile) 
    Specification.

    This extension is written against version 4.40 (revision 6) of the OpenGL
    Shading Language Specification.

    OpenGL 4.2 or ARB_shader_image_load_store is required;GLSL 4.20 is
    required.

Overview

    Graphics devices may execute in parallel fragment shaders referring to the
    same window xy coordinates. Framebuffer writes are guaranteed to be
    processed in primitive rasterization order, but there is no order guarantee
    for other instructions and image or buffer object accesses in
    particular.

    The extension introduces a new GLSL built-in function, 
    beginFragmentShaderOrderingINTEL(), which blocks execution of a fragment 
    shader invocation until invocations from previous primitives that map to 
    the same xy window coordinates (and same sample when per-sample shading
    is active) complete their execution. All memory transactions from previous 
    fragment shader invocations are made visible to the fragment shader 
    invocation that called beginFragmentShaderOrderingINTEL() when the function 
    returns. 

    Including the following line in a shader can be used to control the
    language features described in this extension:

      #extension GL_INTEL_fragment_shader_ordering : <behavior>

    where <behavior> is as specified in section 3.3.

    New preprocessor #defines are added to the OpenGL Shading Language:

      #define GL_INTEL_fragment_shader_ordering 1

New Procedures and Functions

    None.

New Tokens


