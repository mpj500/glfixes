Name

    INTEL_parallel_arrays

Name Strings

    GL_INTEL_parallel_arrays

Version

    $Date: 1997/05/08 22:57:31 $ $Revision: 1.1 $  INITIAL

Number

    136

Dependencies

    OpenGL 1.1

Overview

        This extension adds the ability to format vertex arrays in a way that's 
efficient for SIMD architectures as well as caching.  In addition to storing 
vertex data in staggered in a single array, or sparsely in separate arrays as 
possible with existing vertex arrays, coordinates may be stored in individual 
arrays.  
The parallel array mode is enabled using Enable(PARALLEL_ARRAYS).
Pointers to the coordinate arrays are specified using new vector versions of the
Pointer functions.

Issues

        Should an Enable/Disbale be used to switch to/from parallel arrays, or 
        just infer it from the last type of Pointer called?

        Is stride needed for anything?

        Should this be called Coordinate Arrays?

        Should the <pointer> to the Pointerv funcions be (void *) or (void **)?

Reasoning

        Alternative methods for specifying vertex data are provided for
        vertex, normal, color, and texture pointers.  Need to put in argument   
        for why this is faster on some architectures (cache lines, etc).


New Procedures and Functions

    void VertexPointervINTEL(int size,
                          enum type,
                          const void** pointer);

    void NormalPointervINTEL(enum type,
                          const void** pointer);

    void ColorPointervINTEL(int size,
                          enum type,
                          const void** pointer);

    void TexCoordPointervINTEL(int size,
                          enum type,
                          const void** pointer);

New Tokens


        PARALLEL_ARRAYS_INTEL				0x83F4


        VERTEX_ARRAY_PARALLEL_POINTERS_INTEL		0x83F5
        NORMAL_ARRAY_PARALLEL_POINTERS_INTEL		0x83F6
        COLOR_ARRAY_PARALLEL_POINTERS_INTEL		0x83F7
        TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	0x83F8

