Name

    AMD_vertex_shader_layer

Name Strings

    GL_AMD_vertex_shader_layer

Contact

    Graham Sellers, AMD (graham.sellers 'at' amd.com)

Contributors

    Graham Sellers

Status

    Shipping.

Version

    Last Modified Date: March 19, 2012
    Revision: 3

Number

    417

Dependencies

    OpenGL 3.0 or EXT_texture_array is required.

    OpenGL 3.2 and ARB_geometry_shader4 affect the definition of this
    extension.

    The extension is written against the OpenGL 4.2 Specification, Core Profile,
    January 19, 2012 and the OpenGL Shading Language Specification, version
    4.20.11.

Overview

    The gl_Layer built-in shading language variable was introduced with the
    ARB_geometry_shader extension and subsequently promoted to core OpenGL
    in version 3.2. This variable is an output from the geometry shader stage
    that allows rendering to be directed to a specific layer of an array
    texture, slice of a 3D texture or face of a cube map or cube map array
    attachment of the framebuffer. Thus, this extremely useful functionality is
    only available if a geometry shader is present - even if the geometry shader
    is not otherwise required by the application. This adds overhead to the
    graphics processing pipeline, and complexity to applications. It also
    precludes implementations that cannot support geometry shaders from
    supporting rendering to layered framebuffer attachments.

    This extension exposes the gl_Layer built-in variable in the vertex shader,
    allowing rendering to be directed to layered framebuffer attachments with
    only a vertex and fragment shader present. Combined with features such
    as instancing, or static vertex attributes and so on, this allows a wide
    variety of techniques to be implemented without the requirement for a
    geometry shader to be present.

New Procedures and Functions

    None.

New Tokens


