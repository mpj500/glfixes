Name

    AMD_transform_feedback4

Name Strings

    GL_AMD_transform_feedback4

Contributors

    Graham Sellers, AMD
    Eric Zolnowski, AMD

Contact

    Graham Sellers (graham.sellers 'at' amd.com)

Status

    Shipping

Version

    Last Modified Date:         31/04/2014
    Author Revision:            5

Number

    OpenGL Extension #450

Dependencies

    OpenGL 4.0 or ARB_transform_feedback3 is required.

    This extension is written against the OpenGL Specification, Version 4.4
    (Core Profile).

    This extension is written against the OpenGL Shading Language (GLSL)
    Specification, Version 4.40

Overview

    Transform feedback is a mechanism to record the output of the vertex,
    tessellation evaluation or geometry shader into one or more buffers for
    further processing, recursive rendering or read-back by the client.
    ARB_transform_feedback3 (and OpenGL 4.0) extended the transform feedback
    subsystem to allow multiple streams of primitive information to be
    captured. However, it imposed a limitation that the primitive type for all
    streams must be POINTS if more than one stream is to be captured.
    AMD_transform_feedback3_lines_triangles relaxed that restriction to allow
    lines or triangles to be captured, in the case where multiple streams are
    to be processed. However, it still required that all streams share the same
    primitive type. Additionally, with all current extensions to transform
    feedback, only a single primitive stream may be rasterized.

    This extension enhances transform feedback in two significant ways. First,
    it allows multiple transform feedback streams to be captured, each with its
    own, independent primitve type. Second, it allows any combination of streams
    to be rasterized. As an example, this enables the geometry shader to take
    a single stream of triangle geometry and emit filled triangles with a
    wireframe outline and a point at each vertex, all in a single pass through
    the input vertices. Combined with features such those provided by
    ARB_viewport_array, layered rendering, shader subroutines and so on, an
    application can render several views of its geoemtry, each with a
    radically different style, all in a single pass.

IP Status

    None.

New Procedures and Functions

    None.

New Tokens


        STREAM_RASTERIZATION_AMD                        0x91A0

