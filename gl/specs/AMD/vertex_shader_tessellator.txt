Name

    AMD_vertex_shader_tessellator

Name Strings

    GL_AMD_vertex_shader_tessellator

Contact

    Bill Licea-Kane, AMD ( Bill.Licea-Kane 'at' amd.com )

Status

    Complete

Version

    Last Modified Date: 2009-03-06
    Author Revision: 8

Number

    363

Dependencies

 
    OpenGL 2.0 is required.

    EXT_gpu_shader4 affects the definition of this extension.

    EXT_geometry_shader4 affects the definition of this extension.

    This extension interracts with AMDX_vertex_shader_tesselator.

    This extension is written against the OpenGL Shading Language
    1.20 Specification.

    The extension is written against the OpenGL 2.1 Specification.

Overview

    The vertex shader tessellator gives new flexibility to the shader
    author to shade at a tessellated vertex, rather than just at a
    provided vertex.

    In unextended vertex shading, the built-in attributes such as
    gl_Vertex, gl_Normal, and gl_MultiTexcoord0, together with the
    user defined attributes, are system provided values which are
    initialized prior to vertex shader invocation.

    With vertex shading tessellation, additional vertex shader special 
    values are available:

        ivec3 gl_VertexTriangleIndex; // indices of the three control
                                      // points for the vertex
        vec3 gl_BarycentricCoord;     // barycentric coordinates
                                      // of the vertex

    i o
      |\
      | \
      *--*
      |\ |\
      | \| \
      *--*--*
      |\ |\ |\
      | \| \| \
    j o--*--*--o k

    Figure 1  A Tessellated Triangle
    o = control point (and tessellated vertex)
    * = tessellated vertex

        ivec4 gl_VertexQuadIndex;   // indices for the four control
                                    // points for the vertex
        vec2 gl_UVCoord;            // UV coordinates of the vertex

    i o--*--*--o k
      |\ |\ |\ | 
      | \| \| \|
      *--*--*--*
      |\ |\ |\ | 
      | \| \| \|
      *--*--*--*
      |\ |\ |\ | 
      | \| \| \|
    j o--*--*--o l

    Figure 2  A Tessellated Quad
    o = control point (and tessellated vertex)
    * = tessellated vertex

    When this extension is enabled, conventional built-in attributes
    and user defined attributes are uninitialized.  The shader writer
    is responsible for explicitly fetching all other vertex data either
    from textures, uniform buffers, or vertex buffers.

    The shader writer is further responsible for interpolating 
    the vertex data at the given barycentric coordinates or uv
    coordinates of the vertex.

IP Status

    No known claims.

New Procedures and Functions

    void TessellationFactorAMD( float factor );
    void TessellationModeAMD( enum mode );

New Types

    (None.)

New Tokens


      SAMPLER_BUFFER_AMD                               0x9001
      INT_SAMPLER_BUFFER_AMD                           0x9002
      UNSIGNED_INT_SAMPLER_BUFFER_AMD                  0x9003


      DISCRETE_AMD                                     0x9006
      CONTINUOUS_AMD                                   0x9007


      TESSELLATION_MODE_AMD                            0x9004


      TESSELLATION_FACTOR_AMD                          0x9005

