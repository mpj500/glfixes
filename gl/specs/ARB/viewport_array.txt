Name

    ARB_viewport_array

Name Strings

    GL_ARB_viewport_array

Contributors

    Graham Sellers, AMD
    Mark Young, AMD
    Nick Haemel, AMD
    Bill Licea-Kane, AMD
    Jeff Bolz, NVIDIA
    Daniel Koch, TransGaming
    Pat Brown, NVIDIA
    Bruce Merry, ARM
    Ian Stewart, NVIDIA

Contact

    Graham Sellers, AMD (graham.sellers 'at' amd.com)

Notice

    Copyright (c) 2010-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Version

    Last Modified Date:         06/25/2012
    Author Revision:            18

Number

    ARB Extension #100

Dependencies

    OpenGL 1.0 is required.

    OpenGL 3.2 or the EXT_geometry_shader4 or ARB_geometry_shader4 extensions
    are required.

    This extension is written against the OpenGL 3.2 (Compatibility)
    Specification.

    This extension is written against the OpenGL Shading Language Specification
    version 1.50.09.

New Procedures and Functions

    void ViewportArrayv(uint first, sizei count, const float * v);
    void ViewportIndexedf(uint index, float x, float y, float w, float h);
    void ViewportIndexedfv(uint index, const float * v);
    void ScissorArrayv(uint first, sizei count, const int * v);
    void ScissorIndexed(uint index, int left, int bottom, sizei width, sizei height);
    void ScissorIndexedv(uint index, const int * v);
    void DepthRangeArrayv(uint first, sizei count, const clampd * v);
    void DepthRangeIndexed(uint index, clampd n, clampd f);
    void GetFloati_v(enum target, uint index, float *data);
    void GetDoublei_v(enum target, uint index, double *data);

    void GetIntegerIndexedvEXT(enum target, uint index, int * v);
    void EnableIndexedEXT(enum target, uint index);
    void DisableIndexedEXT(enum target, uint index);
    boolean IsEnabledIndexedEXT(enum target, uint index);

    Note that GetIntegerIndexedvEXT, EnableIndexedEXT, DisableIndexedEXT and
    IsEnabledIndexedEXT are introduced by other OpenGL extensions such as
    EXT_draw_buffers2. If this extension is implemented against an earlier
    version of OpenGL that does not support GetIntegeri_v and so on, the
    'Indexed' versions of these functions may be used in their place.

New Tokens


        MAX_VIEWPORTS                                   0x825B
        VIEWPORT_SUBPIXEL_BITS                          0x825C
        VIEWPORT_BOUNDS_RANGE                           0x825D
        LAYER_PROVOKING_VERTEX                          0x825E
        VIEWPORT_INDEX_PROVOKING_VERTEX                 0x825F


        SCISSOR_BOX                                     0x0C10


        VIEWPORT                                        0x0BA2


        DEPTH_RANGE                                     0x0B70


        SCISSOR_TEST                                    0x0C11


        FIRST_VERTEX_CONVENTION                         0x8E4D
        LAST_VERTEX_CONVENTION                          0x8E4E
        PROVOKING_VERTEX                                0x8E4F
        UNDEFINED_VERTEX                                0x8260

