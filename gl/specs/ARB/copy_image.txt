Name

    ARB_copy_image

Name Strings

    GL_ARB_copy_image

Contact

    Michael Gold, NVIDIA Corporation (gold 'at' nvidia.com)
    Graham Sellers, AMD (graham.sellers 'at' amd.com)

Contributors

    Jeff Bolz, NVIDIA Corporation (jbolz 'at' nvidia.com)
    James Jones, NVIDIA Corporation (jajones 'at' nvidia.com)
    Joe Kain, NVIDIA Corporation (jkain 'at' nvidia.com)
    Benjamin Morris, NVIDIA Corporation (bmorris 'at' nvidia.com)
    Michael Morrison, NVIDIA Corporation (mmorrison 'at' nvidia.com)
    Aaron Plattner, NVIDIA Corporation (aplattner 'at' nvidia.com)
    Mathias Schott, NVIDIA Corporation (mschott 'at' nvidia.com)
    Thomas Volk, NVIDIA Corporation (tvolk 'at' nvidia.com)
    Eric Werness, NVIDIA Corporation (ewerness 'at' nvidia.com)
    Daniel Koch, TransGaming Inc. (daniel 'at' transgaming.com)

Notice

    Copyright (c) 2012-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Complete.
    Approved by the ARB on 2012/06/12.

Version

    Last Modified Date:         May 10, 2012
    Revision:                   3

Number

    ARB Extension #123

Dependencies

    OpenGL 1.1 is required.

    The extension is written against the OpenGL 4.2 (Core Profile) Specification.

    This extension interacts with OpenGL 4.3 and ARB_texture_view.

    This extension interacts with the Compatibility Profile.

    This extension interacts with EXT_texture_compression_s3tc.

    This extension interacts with OpenGL 3.0 and ARB_texture_compression_rgtc.

    This extension interacts with OpenGL 4.2 and ARB_texture_compression_bptc.

Overview

    This extension enables efficient image data transfer between image
    objects (i.e. textures and renderbuffers) without the need to bind
    the objects or otherwise configure the rendering pipeline.

    This is accomplised by adding a new entry-point CopyImageSubData,
    which takes a named source and destination.

    CopyImageSubData does not perform general-purpose conversions
    such as scaling, resizing, blending, color-space, or format 
    conversions. It should be considered to operate in a manner 
    similar to a CPU memcpy, but using the GPU for the copy.

    CopyImageSubData supports copies between images with different
    internal formats, if the formats are compatible for TextureViews.

    CopyImageSubData also supports copying between compressed and
    uncompressed images if the compressed block / uncompressed texel
    sizes are the same.

New Procedures and Functions

    void CopyImageSubData(
        uint srcName, enum srcTarget, int srcLevel,
        int srcX, int srcY, int srcZ,
        uint dstName, enum dstTarget, int dstLevel,
        int dstX, int dstY, int dstZ,
        sizei srcWidth, sizei srcHeight, sizei srcDepth);

New Tokens


