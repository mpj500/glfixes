Name

    ARB_map_buffer_range

Name Strings

    GL_ARB_map_buffer_range

Contributors

    Chris Niederauer, Apple (ccn 'at' apple.com)
    Rob Barris (rbarris 'at' gmail.com)
    Michael Gold, NVIDIA

Notice

    Copyright (c) 2008-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Approved by the ARB on July 11, 2008

Version

    Last Modified Date: June 22, 2012
    Author Revision: 5

Number

    ARB Extension #50

Dependencies

    OpenGL 2.1 is required.

    If ARB_pixel_buffer_object is NOT supported and the OpenGL version is less
    than 2.1, ignore references to PIXEL_UNPACK_BUFFER and PIXEL_PACK_BUFFER.

    If EXT_texture_buffer_object is NOT supported, ignore references to
    TEXTURE_BUFFER_EXT.

    If GL_EXT_bindable_uniform is NOT supported, ignore references to
    UNIFORM_BUFFER_EXT.

    Written based on the wording of the OpenGL 2.1 specification.


Overview

    ARB_map_buffer_range expands the buffer object API to allow greater
    performance when a client application only needs to write to a sub-range
    of a buffer object. To that end, this extension introduces two new buffer
    object features: non-serialized buffer modification and explicit sub-range
    flushing for mapped buffer objects.

    OpenGL requires that commands occur in a FIFO manner meaning that any
    changes to buffer objects either block until the data has been processed by
    the OpenGL pipeline or else create extra copies to avoid such a block.  By
    providing a method to asynchronously modify buffer object data, an
    application is then able to manage the synchronization points themselves
    and modify ranges of data contained by a buffer object even though OpenGL
    might still be using other parts of it.

    This extension also provides a method for explicitly flushing ranges of a
    mapped buffer object so OpenGL does not have to assume that the entire
    range may have been modified.  Further, it allows the application to more
    precisely specify its intent with respect to reading, writing, and whether
    the previous contents of a mapped range of interest need be preserved
    prior to modification.

    Affects ARB_vertex_buffer_object, ARB_pixel_buffer_object and OpenGL 1.5
    Buffer Objects.


Issues

    (1) Why don't the new tokens and entry points in this extension have
       "ARB" suffixes like other ARB extensions?

        RESOLVED: Unlike a normal ARB extension, this is a strict subset
        of functionality already approved in OpenGL 3.0. This extension
        exists only to support that functionality on older hardware that
        cannot implement a full OpenGL 3.0 driver. Since there are no
        possible behavior changes between the ARB extension and core
        features, source code compatibility is improved by not using
        suffixes on the extension.


New Procedures and Functions

    void *MapBufferRange( enum target, intptr offset, sizeiptr length,
        bitfield access );

    void FlushMappedBufferRange( enum target, intptr offset, sizeiptr length );


New Tokens


        MAP_READ_BIT                0x0001
        MAP_WRITE_BIT               0x0002
        MAP_INVALIDATE_RANGE_BIT    0x0004
        MAP_INVALIDATE_BUFFER_BIT   0x0008
        MAP_FLUSH_EXPLICIT_BIT      0x0010
        MAP_UNSYNCHRONIZED_BIT      0x0020


