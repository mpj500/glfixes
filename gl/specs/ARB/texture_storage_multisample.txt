Name

    ARB_texture_storage_multisample

Name Strings

    GL_ARB_texture_storage_multisample

Contact

    Graham Sellers (graham.sellers 'at' amd.com)

Notice

    Copyright (c) 2012-2014 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Complete.
    Approved by the ARB on 2012/06/12.

Version

    Last Modified Date: April 21, 2015
    Version: 9

Number

    ARB Extension #141

Dependencies

    OpenGL 4.2 or ARB_texture_storage is required.

    EXT_direct_state_access affects the definition of this extension.

    This extension is written against the OpenGL 4.2 (Core) Specification.

Overview

    The ARB_texture_storage extension and OpenGL 4.2 introduced the concept
    of immutable texture objects. With these objects, once their data store
    has been sized and allocated, it could not be resized for the lifetime
    of the objects (although its content could be updated). OpenGL
    implementations may be able to take advantage of the knowledge that the
    underlying data store of certain objects cannot be deleted or otherwise
    reallocated without destruction of the whole object (normally, a much
    heavier weight and less frequent operation). Immutable storage
    for all types of textures besides multisample and buffer textures was
    introduced by ARB_texture_storage. For completeness, this extension
    introduces immutable storage for multisampled textures.

IP Status

    No known IP claims.

New Procedures and Functions

        void TexStorage2DMultisample(enum target,
                                     sizei samples,
                                     enum internalformat,
                                     sizei width,
                                     sizei height,
                                     boolean fixedsamplelocations);

        void TexStorage3DMultisample(enum target,
                                     sizei samples,
                                     enum internalformat,
                                     sizei width,
                                     sizei height,
                                     sizei depth,
                                     boolean fixedsamplelocations);

        (the following two functions are provided if and only if
         EXT_direct_state_access is supported)

        void TextureStorage2DMultisampleEXT(uint texture,
                                            enum target,
                                            sizei samples,
                                            enum internalformat,
                                            sizei width,
                                            sizei height,
                                            boolean fixedsamplelocations);

        void TextureStorage3DMultisampleEXT(uint texture,
                                            enum target,
                                            sizei samples,
                                            enum internalformat,
                                            sizei width,
                                            sizei height,
                                            sizei depth,
                                            boolean fixedsamplelocations);

New Tokens


