Name

    ARB_half_float_pixel

Name Strings

    GL_ARB_half_float_pixel

Contributors

    Pat Brown
    Jon Leech
    Rob Mace
    Brian Paul

Contact

    Dale Kirkland, NVIDIA (dkirkland 'at' nvidia.com)

Notice

    Copyright (c) 2004-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Complete. Approved by the ARB on October 22, 2004.

Version

    Last Modified Date:  October 1, 2004
    Version:             6

Number

    ARB Extension #40

Dependencies

    This extension is written against the OpenGL 2.0 Specification
    but will work with the OpenGL 1.5 Specification.

    Based on the NV_half_float extension.

    This extension interacts with ARB_color_buffer_float.

Overview

    This extension introduces a new data type for half-precision (16-bit)
    floating-point quantities.  The floating-point format is very similar
    to the IEEE single-precision floating-point standard, except that it
    has only 5 exponent bits and 10 mantissa bits.  Half-precision floats
    are smaller than full precision floats and provide a larger dynamic
    range than similarly sized normalized scalar data types.

    This extension allows applications to use half-precision floating-
    point data when specifying pixel data.  It extends the existing image
    specification commands to accept the new data type.

    Floating-point data is clamped to [0, 1] at various places in the
    GL unless clamping is disabled with the ARB_color_buffer_float
    extension.

IP Status

    SGI owns US Patent #6,650,327, issued November 18, 2003. SGI
    believes this patent contains necessary IP for graphics systems
    implementing floating point (FP) rasterization and FP framebuffer
    capabilities.

    SGI will not grant the ARB royalty-free use of this IP for use in
    OpenGL, but will discuss licensing on RAND terms, on an individual
    basis with companies wishing to use this IP in the context of
    conformant OpenGL implementations. SGI does not plan to make any
    special exemption for open source implementations.

    Contact Doug Crisman at SGI Legal for the complete IP disclosure.

Issues

    1. How is this extension different from the NV_half_float extension?

       This extension does not add new commands for specifying half-
       precision vertex data, and all imaging functions have been listed
       for supporting the "half" type.

    2. What should the new data type be called?  "half"?  "hfloat"?

       RESOLVED:  half .  This convention builds on the convention of
       using the type "double" to describe double-precision floating-
       point numbers.  Here, "half" will refer to half-precision
       floating-point numbers.

       Even though the 16-bit float data type is a first-class data type,
       it is still more problematic than the other types in the sense
       that no native programming languages support the data type.
       "hfloat/hf" would have reflected a second-class status better
       than "half/h".

       Both names are not without conflicting precedents.  The name "half"
       is used to connote 16-bit scalar values on some 32-bit CPU
       architectures (e.g., PowerPC).  The name "hfloat" has been used to
       describe 128-bit floating-point data on VAX systems.

    3. Should half-precision data be accepted by commands in the imaging
       subset that accept pixel data?

       RESOLVED:  Yes, all functions in the core OpenGL and the imaging
       subset that accept pixel data accept half-precision data.

    4. Should the special representations NaN, INF, and denormal be
       supported?

       RESOLVED:  Implementation dependent.  The spec reflects that Nan
       and INF produce unspecified results.  Denormalized numbers can
       be treated as a value of 0.


New Tokens


        HALF_FLOAT_ARB                                0x140B

