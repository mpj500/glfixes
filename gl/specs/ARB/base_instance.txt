Name

    ARB_base_instance

Name Strings

    GL_ARB_base_instance

Contact

    Graham Sellers, AMD (graham.sellers 'at' amd.com)

Contributors

    Daniel Koch, NVIDIA

Notice

    Copyright (c) 2011-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Complete. Approved by the ARB on 2011/06/20.
    Approved by the Khronos Promoters on 2011/07/29.

Version

    Last Modified Date:         June 13, 2014
    Author Revision:            7

Number

    ARB Extension #107

Dependencies

    This extension is written against the OpenGL Specification, Version 4.1
    (Core Profile).

    OpenGL 3.1 or ARB_draw_instanced is required.

Overview

    This extension allows the offset within buffer objects used for instanced
    rendering to be specified. This is congruent with the <first> parameter
    in glDrawArrays and the <basevertex> parameter in glDrawElements. When
    instanced rendering is performed (for example, through
    glDrawArraysInstanced), instanced vertex attributes whose vertex attribute
    divisors are non-zero are fetched from enabled vertex arrays per-instance
    rather than per-vertex. However, in unextended OpenGL, there is no way to
    define the offset into those arrays from which the attributes are fetched.
    This extension adds that offset in the form of a <baseinstance> parameter
    to several new procedures.

    The <baseinstance> parameter is added to the index of the array element,
    after division by the vertex attribute divisor. This allows several sets of
    instanced vertex attribute data to be stored in a single vertex array, and
    the base offset of that data to be specified for each draw. Further, this
    extension exposes the <baseinstance> parameter as the final and previously
    undefined structure member of the draw-indirect data structure.

IP Status

    None.

New Procedures and Functions

        void DrawArraysInstancedBaseInstance(enum mode,
                                             int first,
                                             sizei count,
                                             sizei primcount,
                                             uint baseinstance);

        void DrawElementsInstancedBaseInstance(enum mode,
                                               sizei count,
                                               enum type,
                                               const void *indices,
                                               sizei primcount,
                                               uint baseinstance);

        void DrawElementsInstancedBaseVertexBaseInstance(enum mode,
                                                         sizei count,
                                                         enum type,
                                                         const void *indices,
                                                         sizei primcount,
                                                         int basevertex,
                                                         uint baseinstance);

New Tokens


