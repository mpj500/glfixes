Name

    ARB_shading_language_420pack

Name Strings

    GL_ARB_shading_language_420pack

Contact

    John Kessenich (cepheus 'at' frii.com)

Contributors

    Pat Brown, NVIDIA
    Jeff Bolz, NVIDIA
    Pierre Boudier, AMD
    Piers Daniell, NVIDIA
    Patrick Doane, Blizzard
    John Kessenich
    Daniel Koch, Transgaming
    Bill Licea-Kane, AMD
    Barthold Lichtenbelt, NVIDIA
    Ian Romanick, Intel
    Bruce Merry, ARM
    Graham Sellers, AMD
    Robert Simpson, Qualcomm
    
Notice

    Copyright (c) 2011-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Complete.
    Approved by the ARB 25-Jul-2011.
    Approved by the Khronos Promoters on 2011/07/29.

Version

    Last Modified Date: 11-Sep-2014
    Revision: 4

Number

    ARB Extension #108

Dependencies

    GLSL 1.3 is required for all features.  GLSL 1.4 is required 
    declaring a binding for a uniform block, as uniform blocks were not 
    present until version 1.4.

    This extension interacts with the ARB_shader_image_load_store 
    extension, for assigning locations to image variables.

    References to *patch* are not valid unless tessellation stages are
    present and enabled.

    While this document is self-contained, clarifying context for how to 
    add the following changes can be seen by looking at version 4.20 of 
    the GLSL specification.

Overview

    This is a language feature only extension formed from changes made
    to version 4.20 of GLSL.  It includes:

    * Add line-continuation using '\', as in C++.

    * Change from ASCII to UTF-8 for the language character set and also 
      allow any characters inside comments.

    * Allow implicit conversions of return values to the declared type of 
      the function.

    * The *const* keyword can be used to declare variables within a function 
      body with initializer expressions that are not constant expressions.

    * Qualifiers on variable declarations no longer have to follow a strict 
      order. The layout qualifier can be used multiple times, and multiple 
      parameter qualifiers can be used.  However, this is not as
      straightforward as saying declarations have arbitrary lists of 
      initializers.  Typically, one qualifier from each class of qualifiers
      is allowed, so care is now taken to classify them and say so.  Then, 
      of these, order restrictions are removed.

    * Add layout qualifier identifier "binding" to bind the location of a
      uniform block.  This requires version 1.4 of GLSL.  If this extension
      is used with an earlier version than 1.4, this feature is not present.
    
    * Add layout qualifier identifier "binding" to bind units to sampler 
      and image variable declarations.
    
    * Add C-style curly brace initializer lists syntax for initializers. 
      Full initialization of aggregates is required when these are used.

    * Allow ".length()" to be applied to vectors and matrices, returning 
      the number of components or columns.

    * Allow swizzle operations on scalars.

    * Built-in constants for gl_MinProgramTexelOffset and 
      gl_MaxProgramTexelOffset.

IP Status

    No known IP claims.

