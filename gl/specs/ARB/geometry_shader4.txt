Name

    ARB_geometry_shader4

Name String

    GL_ARB_geometry_shader4

Contact

    Pat Brown, NVIDIA (pbrown 'at' nvidia.com)
    Barthold Lichtenbelt, NVIDIA (blichtenbelt 'at' nvidia.com)

Notice

    Copyright (c) 2008-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Approved by the ARB on July 11, 2008

Version

    Last Modified Date:         01/21/2011
    NVIDIA Revision:            26

Number

    ARB Extension #47

Dependencies

    OpenGL 1.1 is required.

    This extension is written against the OpenGL 2.0 specification.

    EXT_framebuffer_object interacts with this extension.

    EXT_framebuffer_blit interacts with this extension.

    EXT_texture_array interacts with this extension.

    ARB_texture_rectangle trivially affects the definition of this
    extension.

    ARB_texture_buffer_object trivially affects the definition of this
    extension.

    NV_primitive_restart trivially affects the definition of this
    extension.

    This extension interacts with ARB_tranform_feedback.

    This extension interacts with geometry shader support in OpenGL 3.2.

    This extension interacts with ARB_uniform_buffer_object.

Overview

    ARB_geometry_shader4 defines a new shader type available to be run on the
    GPU, called a geometry shader. Geometry shaders are run after vertices are
    transformed, but prior to color clamping, flat shading and clipping.

    A geometry shader begins with a single primitive (point, line,
    triangle). It can read the attributes of any of the vertices in the
    primitive and use them to generate new primitives. A geometry shader has a
    fixed output primitive type (point, line strip, or triangle strip) and
    emits vertices to define a new primitive. A geometry shader can emit
    multiple disconnected primitives. The primitives emitted by the geometry
    shader are clipped and then processed like an equivalent OpenGL primitive
    specified by the application.

    Furthermore, ARB_geometry_shader4 provides four additional primitive
    types: lines with adjacency, line strips with adjacency, separate
    triangles with adjacency, and triangle strips with adjacency.  Some of the
    vertices specified in these new primitive types are not part of the
    ordinary primitives, instead they represent neighboring vertices that are
    adjacent to the two line segment end points (lines/strips) or the three
    triangle edges (triangles/tstrips). These vertices can be accessed by
    geometry shaders and used to match up the vertices emitted by the geometry
    shader with those of neighboring primitives.

    Since geometry shaders expect a specific input primitive type, an error
    will occur if the application presents primitives of a different type.
    For example, if a geometry shader expects points, an error will occur at
    Begin() time, if a primitive mode of TRIANGLES is specified.

New Procedures and Functions

    void ProgramParameteriARB(uint program, enum pname, int value);
    void FramebufferTextureARB(enum target, enum attachment, 
                               uint texture, int level);
    void FramebufferTextureLayerARB(enum target, enum attachment, 
                                    uint texture, int level, int layer);
    void FramebufferTextureFaceARB(enum target, enum attachment,
                                   uint texture, int level, enum face);

New Tokens


        GEOMETRY_SHADER_ARB                             0x8DD9


        GEOMETRY_VERTICES_OUT_ARB                       0x8DDA
        GEOMETRY_INPUT_TYPE_ARB                         0x8DDB
        GEOMETRY_OUTPUT_TYPE_ARB                        0x8DDC


        MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB             0x8C29
        MAX_GEOMETRY_VARYING_COMPONENTS_ARB              0x8DDD
        MAX_VERTEX_VARYING_COMPONENTS_ARB                0x8DDE
        MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB              0x8DDF
        MAX_GEOMETRY_OUTPUT_VERTICES_ARB                 0x8DE0
        MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB         0x8DE1


        LINES_ADJACENCY_ARB                              0xA
        LINE_STRIP_ADJACENCY_ARB                         0xB
        TRIANGLES_ADJACENCY_ARB                          0xC
        TRIANGLE_STRIP_ADJACENCY_ARB                     0xD


        FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB         0x8DA8
        FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB           0x8DA9


        FRAMEBUFFER_ATTACHMENT_LAYERED_ARB               0x8DA7
        FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER             0x8CD4


        PROGRAM_POINT_SIZE_ARB                           0x8642



