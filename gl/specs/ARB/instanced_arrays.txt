Name

    ARB_instanced_arrays

Name Strings

    GL_ARB_instanced_arrays

Contributors

    Michael Gold, NVIDIA
    James Helferty, TransGaming Inc.
    Daniel Koch, TransGaming Inc.
    John Rosasco, Apple
    Mark Kilgard, NVIDIA
    Piers Daniell, NVIDIA

Contact

    James Helferty, TransGaming Inc. (james 'at' transgaming.com)
    Daniel Koch, TransGaming Inc. (daniel 'at' transgaming.com)

Notice

    Copyright (c) 2008-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Approved by the ARB on July 11, 2008.

Version

    Last Modified Date:  August 8, 2013
    Author Revision: 7

    EXT_direct_state_access interacton added with revision 7.

Number

    ARB Extension #49

Dependencies

    OpenGL 1.1 is required.

    This extension is written against the OpenGL 2.1 Specification.

    ARB_draw_instanced affects the definition of this extension.
    
    EXT_draw_instanced affects the definition of this extension.
    
    EXT_gpu_shader4 affects the definition of this extension.

Overview

    A common use case in GL for some applications is to be able to
    draw the same object, or groups of similar objects that share
    vertex data, primitive count and type, multiple times.  This 
    extension provides a means of accelerating such use cases while 
    restricting the number of API calls, and keeping the amount of 
    duplicate data to a minimum.
    
    In particular, this extension specifies an alternative to the 
    read-only shader variable introduced by ARB_draw_instanced.  It
    uses the same draw calls introduced by that extension, but 
    redefines them so that a vertex shader can instead use vertex 
    array attributes as a source of instance data.
    
    This extension introduces an array "divisor" for generic
    vertex array attributes, which when non-zero specifies that the
    attribute is "instanced."  An instanced attribute does not
    advance per-vertex as usual, but rather after every <divisor>
    conceptual draw calls.
    
    (Attributes which aren't instanced are repeated in their entirety
    for every conceptual draw call.)
    
    By specifying transform data in an instanced attribute or series
    of instanced attributes, vertex shaders can, in concert with the 
    instancing draw calls, draw multiple instances of an object with 
    one draw call.

IP Status

    No known IP claims.

New Tokens


        VERTEX_ATTRIB_ARRAY_DIVISOR_ARB                 0x88FE

New Procedures and Functions

    void VertexAttribDivisorARB(uint index, uint divisor);

    When EXT_direct_state_access is present:

        void VertexArrayVertexAttribDivisorEXT(uint vaobj, uint index, uint divisor);

