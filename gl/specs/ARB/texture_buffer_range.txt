Name

    ARB_texture_buffer_range

Name Strings

    GL_ARB_texture_buffer_range

Contact

    Graham Sellers (graham.sellers 'at' amd.com)

Contributors

    Jon Leech
    Mark Kilgard, NVIDIA

Notice

    Copyright (c) 2012-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Complete.
    Approved by the ARB on 2012/06/12.

Version

    Last Modified Date: August 7, 2013
    Version: 8

Number

    ARB Extension #139

Dependencies

    ARB_texture_buffer_object or OpenGL 3.1 is required.

    The definition of this extension is dependent on EXT_direct_state_access.

    This extension is written against the OpenGL 4.2 (Core) Specification.

Overview

    ARB_texture_buffer_object (which was promoted to core in OpenGL 3.1)
    introduced the ability to attach the data store of a buffer object
    to a buffer texture and access it from shaders. The extension only allows
    the entire store of the buffer object to the texture. This extension
    expands on this and allows a sub-range of the buffer's data store to
    be attached to a texture. This can be used, for example, to allow multiple
    buffer textures to be backed by independent sub-ranges of the same buffer
    object, or for different sub-ranges of a single buffer object to be used
    for different purposes.

IP Status

    No known IP claims.

New Procedures and Functions

        void TexBufferRange(enum target,
                            enum internalformat,
                            uint buffer,
                            intptr offset,
                            sizeiptr size);

    When EXT_direct_state_access is present:

        void TextureBufferRangeEXT(uint texture,
                                   enum target,
                                   enum internalformat,
                                   uint buffer,
                                   intptr offset,
                                   sizeiptr size);

New Tokens


        TEXTURE_BUFFER_OFFSET                               0x919D
        TEXTURE_BUFFER_SIZE                                 0x919E


        TEXTURE_BUFFER_OFFSET_ALIGNMENT                     0x919F

