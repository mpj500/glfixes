Name

    ARB_transform_feedback2

Name Strings

    GL_ARB_transform_feedback2

Contributors

    Eric Zolnowski

Contact

    Pat Brown, NVIDIA Corporation (pbrown 'at' nvidia.com)
    Eric Zolnowski, AMD (eric.zolnowski 'at' amd.com)

Notice

    Copyright (c) 2010-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Complete. Approved by the ARB at the 2010/01/22 F2F meeting.
    Approved by the Khronos Board of Promoters on March 10, 2010.

Version

    Last Modified Date:         2012/06/28
    Author Revision:            7

Number

    ARB Extension #93

Dependencies

    The OpenGL Shading Language (GLSL) is required.  OpenGL 2.0 or the 
    ARB_shader_objects extension is required.

    NV_transform_feedback or EXT_transform_feedback is required.  

    EXT_geometry_shader4 trivially interacts with this extension.

    This extension is written against the OpenGL 2.1 Specification.

    This extension is written against the EXT_transform_feedback extension 
    specification.

Overview

    The EXT_transform_feedback extension allows applications to capture 
    primitives to one or more buffer objects when transformed by the GL.
    This extension provides a few additional capabilities to these extensions,
    making transform feedback mode more useful.

    First, it provides transform feedback objects which encapsulate transform
    feedback-related state, allowing applications to replace the entire
    transform feedback configuration in a single bind call.  Second, it
    provides the ability to pause and resume transform feedback operations.
    When transform feedback is paused, applications may render without
    transform feedback or may use transform feedback with different state and
    a different transform feedback object.  When transform feedback is
    resumed, additional primitives are captured and appended to previously
    captured primitives for the object.

    Additionally, this extension provides the ability to draw primitives
    captured in transform feedback mode without querying the captured
    primitive count.  The command DrawTransformFeedback() is equivalent to
    glDrawArrays(<mode>, 0, <count>), where <count> is the number of vertices
    captured to buffer objects during the last transform feedback capture
    operation on the transform feedback object used.  This draw operation only
    provides a vertex count -- it does not automatically set up vertex array
    state or vertex buffer object bindings, which must be done separately by
    the application.

IP Status

    No known IP claims.

New Procedures and Functions

    void BindTransformFeedback(enum target, uint id);
    void DeleteTransformFeedbacks(sizei n, const uint *ids);
    void GenTransformFeedbacks(sizei n, uint *ids);
    boolean IsTransformFeedback(uint id);

    void PauseTransformFeedback(void);
    void ResumeTransformFeedback(void);

    void DrawTransformFeedback(enum mode, uint id);

New Tokens


      TRANSFORM_FEEDBACK                                 0x8E22


      TRANSFORM_FEEDBACK_BUFFER_PAUSED                   0x8E23
      TRANSFORM_FEEDBACK_BUFFER_ACTIVE                   0x8E24
      TRANSFORM_FEEDBACK_BINDING                         0x8E25

