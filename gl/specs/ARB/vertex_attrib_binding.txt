Name

    ARB_vertex_attrib_binding

Name Strings

    GL_ARB_vertex_attrib_binding

Contact

    Jeff Bolz, NVIDIA Corporation (jbolz 'at' nvidia.com)

Contributors

    Pat Brown, NVIDIA
    Bruce Merry
    Mark Kilgard

Notice

    Copyright (c) 2012-2013 The Khronos Group Inc. Copyright terms at
        http://www.khronos.org/registry/speccopyright.html

Status

    Complete.
    Approved by the ARB on 2012/06/12.

Version

    Last Modified Date: October 22, 2013
    Revision: 5

    EXT_direct_state_access interacton added with revision 3.

Number

    ARB Extension #125

Dependencies

    This extension is written against the OpenGL 4.2 Core specification.

    NV_vertex_buffer_unified_memory affects the definition of this 
    extension.

    EXT_direct_state_access affects the definition of this extension.

    The Compatibility specification affects the definition of this extension.

Overview

    OpenGL currently supports (at least) 16 vertex attributes and 16 vertex 
    buffer bindings, with a fixed mapping between vertex attributes and 
    vertex buffer bindings. This extension allows the application to change
    the mapping between attributes and bindings, which can make it more 
    efficient to update vertex buffer bindings for interleaved vertex formats
    where many attributes share the same buffer.

    This extension also separates the vertex binding update from the vertex
    attribute format update, which saves applications the effort of 
    redundantly specifying the same format state over and over.

    Conceptually, this extension splits the state for generic vertex attribute
    arrays into:

    - An array of vertex buffer binding points, each of which specifies:

      - a bound buffer object,

      - a starting offset for the vertex attribute data in that buffer object,

      - a stride used by all attributes using that binding point, and

      - a frequency divisor used by all attributes using that binding point.

    - An array of generic vertex attribute format information records, each of
      which specifies:

      - a reference to one of the new buffer binding points above,

      - a component count and format, and a normalization flag for the
        attribute data, and

      - the offset of the attribute data relative to the base offset of each
        vertex found at the associated binding point.


New Procedures and Functions

    void BindVertexBuffer(uint bindingindex, uint buffer, intptr offset, 
                          sizei stride);
    
    void VertexAttribFormat(uint attribindex, int size, enum type, 
                            boolean normalized, uint relativeoffset);
    void VertexAttribIFormat(uint attribindex, int size, enum type, 
                             uint relativeoffset);
    void VertexAttribLFormat(uint attribindex, int size, enum type, 
                             uint relativeoffset);

    void VertexAttribBinding(uint attribindex, uint bindingindex);

    void VertexBindingDivisor(uint bindingindex, uint divisor);

    When EXT_direct_state_access is present:

        void VertexArrayBindVertexBufferEXT(uint vaobj, uint bindingindex, uint buffer, intptr offset, 
                                            sizei stride);
    
        void VertexArrayVertexAttribFormatEXT(uint vaobj, uint attribindex, int size, enum type, 
                                boolean normalized, uint relativeoffset);
        void VertexArrayVertexAttribIFormatEXT(uint vaobj, uint attribindex, int size, enum type, 
                                 uint relativeoffset);
        void VertexArrayVertexAttribLFormatEXT(uint vaobj, uint attribindex, int size, enum type, 
                                 uint relativeoffset);

        void VertexArrayVertexAttribBindingEXT(uint vaobj, uint attribindex, uint bindingindex);

        void VertexArrayVertexBindingDivisorEXT(uint vaobj, uint bindingindex, uint divisor);

New Tokens


        VERTEX_ATTRIB_BINDING                           0x82D4  
        VERTEX_ATTRIB_RELATIVE_OFFSET                   0x82D5  


        VERTEX_BINDING_DIVISOR                          0x82D6  
        VERTEX_BINDING_OFFSET                           0x82D7  
        VERTEX_BINDING_STRIDE                           0x82D8  
        VERTEX_BINDING_BUFFER                           0x8F4F


        MAX_VERTEX_ATTRIB_RELATIVE_OFFSET               0x82D9  
        MAX_VERTEX_ATTRIB_BINDINGS                      0x82DA  


