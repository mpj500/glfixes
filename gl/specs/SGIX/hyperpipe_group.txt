Name

    SGIX_hyperpipe

Name Strings

    GLX_SGIX_hyperpipe

Contact

    Jon Leech, SGI (ljp 'at' sgi.com)

Version

    Last Modified Date: 2004/07/21
    Revision: $Header: //depot/main/doc/registry/extensions/SGI/hyperpipe_group.spec#14 $

Number

    307

Dependencies

    GLX 1.2 is required
    SGIX_swap_control affects the definition of this extension.

New Procedures and Functions

    The following structure definitions are used by the extension:

    /*
     *	pipeName uniquely names a pipe in the form ":display.screen"
     *	networkId is a unique physical hyperpipe network ID.
     */
    typedef struct {
	char  pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
	int  networkId;
    } GLXHyperpipeNetworkSGIX;

    /*
     *	pipeName uniquely names a pipe in the form ":display.screen"
     *	channel is the channel number associated with the display pipe.
     *	participationType is a bitmask describing the attributes of a
     *	    participating pipe. It may contain one or more of the
     *	    attribute bits
     *		GLX_HYPERPIPE_DISPLAY_PIPE_SGIX
     *		GLX_HYPERPIPE_RENDERING_PIPE_SGIX
     *	timeSlice is ignored for GLX_HYPERPIPE_DISPLAY_PIPE_SGIX only.
     */
    typedef struct {
	char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
	int channel;
	unsigned int participationType;
	int timeSlice;
    } GLXHyperpipeConfigSGIX;

    /*
     *	pipeName uniquely names a pipe in the form ":display.screen"
     *	src origin/size are in managed area coordinates (pixels).
     *	dest origin/size are in output channel display coordinates.
     */
    typedef struct {
	char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
	int srcXOrigin;
	int srcYOrigin;
	int srcWidth;
	int srcHeight;
	int destXOrigin;
	int destYOrigin;
	int destWidth;
	int destHeight;
    } GLXPipeRect;

    /*
     *	pipeName uniquely names a pipe in the form ":display.screen"
     *	origin/size are in managed area coordinates (pixels)
     */
    typedef struct {
	char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
	int XOrigin; /* pixels in managed area */
	int YOrigin;
	int maxHeight;
	int maxWidth;
    } GLXPipeRectLimits;

    GLXHyperpipeNetworkSGIX *
	glXQueryHyperpipeNetworkSGIX(
	    Display *dpy, int *npipes);

    int glXHyperpipeConfigSGIX(
	    Display *dpy, int networkId, int npipes,
	    GLXHyperpipeConfigSGIX *cfg, int *hpId);

    GLXHyperpipeConfigSGIX *
	glXQueryHyperpipeConfigSGIX(
	    Display *dpy, int hpId, int *npipes);

    int glXDestroyHyperpipeConfigSGIX(
	    Display * dpy, int hpId);

    int glXBindHyperpipeSGIX(
	    Display *dpy, int hpId);

    int glXQueryHyperpipeBestAttribSGIX(
	    Display *dpy, int timeSlice, int attrib, int size,
	    void *attribList, void *returnAttribList);

    int glXHyperpipeAttribSGIX(
	    Display *dpy, int timeSlice, int attrib, int size,
	    void *attribList);

    int glXQueryHyperpipeAttribSGIX(
	    Display *dpy, int timeSlice, int attrib, int size,
	    void *returnAttribList);



New Tokens


	GLX_HYPERPIPE_ID_SGIX		    0x8030


	GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX 80


	GLX_HYPERPIPE_DISPLAY_PIPE_SGIX     0x00000001
	GLX_HYPERPIPE_RENDER_PIPE_SGIX	    0x00000002


	GLX_PIPE_RECT_SGIX		    0x00000001
	GLX_PIPE_RECT_LIMITS_SGIX	    0x00000002
	GLX_HYPERPIPE_STEREO_SGIX	    0x00000003
	GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX    0x00000004






	GLX_BAD_HYPERPIPE_CONFIG_SGIX	    91
	GLX_BAD_HYPERPIPE_SGIX		    92


