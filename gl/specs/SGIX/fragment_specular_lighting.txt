Name

    SGIX_fragment_specular_lighting

Name Strings

    GL_SGIX_fragment_specular_lighting

Version

    $Date: 1998/07/06 19:51:38 $ $Revision: 1.2 $

Number

    ??

Dependencies

    OpenGL 1.1 is required.
    SGIX_color_range affects the definition of this extension.

Overview

    This extension adds a new lighting stage to the OpenGL pipeline.  This
    stage occurs during fragment processing after the texture environment
    has been applied and before fog has been applied.  The extension
    provides a mechanism for computing a post-texture specular lighting term.
    This extension doesn't eliminate the specular term in vertex lighting, but
    can be used to augment it.  This extension provides the state framework for a
    more general lighting model, but only includes the equation for computing
    the specular contribution.  The more general version is described in
    SGIX_fragment_lighting.



                  Ct  Cf
                  |   |-------------------------------+
                  |   |                               |
                ----------                            |
                |        |                            |
                | TexEnv |                            |
                |        |                            |
                ----------                            |
                    |                                 |
                ----------                            |
                | Clamp  |            Nf  Lf  Hf  Ff  |
                ----------            |   |   |   |   |
                    |              -----------------  | FragmentColorMaterial
                    |              |               |  v
                    Cf'            | FragmentLight |--o-<- Material {Sm,...}
                    |              |               |
                    |              -----------------
                    |                      |
                    |                  ---------
                    |                  | Clamp |
                    |                  ---------
                    |       Cl             |
                    |      +----------------
                    v      v
                  ------------
                  |          |
                  |   SUM    |
                  |          |
                  ------------
                       |
                   ---------
                   | Clamp |
                   ---------
                       |
                       Cf''
                       |
                       v
                    -------
                    |     |
                    | Fog |
                    |     |
                    -------
                       |
                       v

IP Status

    Silicon Graphics has filed for patent protection for some of the
    techniques described in this extension document.

Issues

    *   does this spec enable a reasonable evolution from a post-texture
        specular highlight to a full blown per-pixel lighting computation?

    *   can we eliminate some commands and state now and allow the generality
        to show up later?  It doesn't seem like there is much harm in maintaining
        extra state for computations that isn't actually used since it can be
        maintained on the host.  We eliminate the Lighting environment term
        since it provides extra capability for how the lighting term is combined.
        It can show up with the fragment_lighting extension.

    *   given the relaxation in the requirements for how the specular term is
        computed, it is possible to support multiple specular lights but much
        less likely to be able to support the same number of full blown fragment
        lights.


New Procedures and Functions

    void FragmentLightModeliSGIX(enum pname, int param);
    void FragmentLightModelfSGIX(enum pname, float param);
    void FragmentLightModelivSGIX(enum pname, int *params);
    void FragmentLightModelfvSGIX(enum pname, float *params);

    void FragmentLightiSGIX(enum light, enum pname, int param);
    void FragmentLightfSGIX(enum light, enum pname, float param);
    void FragmentLightivSGIX(enum light, enum pname, int *params);
    void FragmentLightfvSGIX(enum light, enum pname, float *params);

    void GetFragmentLightivSGIX(enum light, enum value, int *data);
    void GetFragmentLightfvSGIX(enum light, enum value, float *data);

    void FragmentMaterialfSGIX(enum face, enum pname, const float param);
    void FragmentMaterialiSGIX(enum face, enum pname, const int param);
    void FragmentMaterialfvSGIX(enum face, enum pname, const float *params);
    void FragmentMaterialivSGIX(enum face, enum pname, const int *params);

    void FragmentColorMaterialSGIX(enum face, enum mode);

    void GetFragmentMaterialfvSGIX(enum face, enum pname, const float *data);
    void GetFragmentMaterialivSGIX(enum face, enum pname, const int *data);

New Tokens









