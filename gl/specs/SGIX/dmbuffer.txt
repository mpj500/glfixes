Name

    SGIX_dmbuffer

Name Strings

    GLX_SGIX_dm_buffer

Version

    $Date: 1997/09/26 09:48:00 $ $Revision: 1.6 $

Number

    86

Dependencies

    SGIX_FBConfig is required
    SGI_make_current_read is required.
    SGIX_pbuffer

Overview

    This extension introduces a new type of GLXPbuffer, a DM or Digital
    Media pbuffer.  A DM pbuffer is a GLXPbuffer that adopts one or more 
    of its buffers from an externally defined and allocated DMbuffer. 
    In this way it resembles a GLXPixmap that attaches to an existing
    X pixmap.  Like a standard pbuffer it can be used as a non-displayable
    rendering area, or as a read source for pixel data.  The externally
    defined buffers of the DM pbuffer can be sequentially associated 
    with other DM buffers of the same size and configuration.  

    .  The DM pbuffer is described with a new attrib passed to 
       glXCreateGLXPbuffer.  

    .  A new GLX command allows associating a compatible DMbuffer with 
       the DM GLXPbuffer.  At associate time the DM buffers described 
       by the DMparams are used directly as the corresponding 
       buffers of the GLXPbuffer drawable, as described by the FBconfig.  
       All other buffers that are part of the config will be created by
       GL without externally referenceable names.  A DM pbuffer must be
       associated with a compatible DMbuffer before it can be made current
       to a GLX context. 

    .  The externally defined buffers of the DM pbuffer can be changed at 
       any time by successfully associating a new DMbuffer with the GLXPbuffer 
       through the associate command.  It will be the application's 
       responsibility to synchronize DMedia, GLX, and GL commands that 
       effect the contents of the DM pbuffer.

    .  Any direct GLX rendering context that satisfies config compatibility
       can be used to render to or read from a DM GLXPbuffer.
       A currently associated DMbuffer may simultaneously be in use by 
       other clients on the same Display, but will not be destroyed
       while associated with a GLXPbuffer.  When the GLXpbuffer is
       destroyed, all buffers that have no remaining clients, including
       the DMbuffer, will be freed.

    DM GLXPbuffers are proposed as a means for OpenGL to access buffers
    generated by the VL, compression, and other digital media libraries in 
    a uniform way.  The DMbuffer and DMparams descriptors are left 
    intentionally abstract so that the GLX extension can adapt to future 
    DM library changes.  
    The initial implementation will require that the DMparams descriptor
    supply at least pixel format and packing information, and that the  
    DMbuffer provide the size and location of a colorbuffer.  GLX will do 
    compatibility checking when possible based on the config, params, and 
    buffer information at associate time. 
     
Issues


New Procedures and Functions

    Bool glXAssociateDMPbufferSGIX(Display *dpy,
				   GLXPbufferSGIX pbuffer,
                                   DMparams *params,
                                   DMbuffer dmbuffer);

New Tokens


        GLX_DIGITAL_MEDIA_PBUFFER_SGIX             0x8024


