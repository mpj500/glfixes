Name

    SGIS_color_range

Name Strings

    GLX_SGIS_color_range
    GL_SGIS_color_range

Version

    $Date: 1999/06/23 23:25:41 $ $Revision: 1.9 $

Number

    115

Dependencies

    OpenGL 1.1 is required
    SGIX_fbconfig is required
    SGIX_fbconfig_float is recommended
    EXT_histogram affects the definition of this extension
    SGI_color_table affects the definition of this extension
    SGIS_multisample affects the definition of this extension

Overview

    This extension enhances the fbconfig types to support fbconfigs
    (visuals) with extended range color data. The range of color data is
    extended from [0,1] to [min,max], e.g., [-1.5,4.0].  Most OpenGL data
    paths which clamp colors to [0,1] are modified to clamp colors to
    [min,max].  The range is a fixed property of the fbconfig. Extended
    range color is useful for imaging calculations and multipass shading
    operations which often require signed data or increased dynamic range.

IP Status

    Silicon Graphics has filed for patent protection for some of the
    techniques described in this extension document.

Issues

    * how does an application request the color range it needs to represent?
      should the min/max values be interpreted specially in ChooseConfig
      or should they be of a more limited usefulness exact match style?

        They are interpreted uniquely.  An fbconfig is chosen with the
        tightest possible bound which meets or exceeds the range
        indicated by the application.

    * the spec does not distinguish between old-style [0,1] color
      and extended range color (i.e. no attribute bits, just
      the min and max values).  Is this okay?   NO!!!

        Added EXTENDED_RANGE_SGI attribute to distinguish extended
        range visuals from other visuals.

    * float input pixel values and float colors automatically support the
      extended range.  Integer colors are still scaled to [0,1].
      This means that GetIntegerv of an extended range color can not
      represent an extended color range. Is this okay? YES.

    * when the color range is extended this implies that accumulation buffers
      and texture colors also support the extended range. Is this okay?

      it has been suggested that accumulation stay as [-1,1] which would
      imply that out of range results would leave the acbuf undefined?

    * if a component isn't stored in the framebuffer (bits == 0) what should
      range queries return.  0 seems obvious for R, G, and B, but what about
      alpha.  If there is no alpha value, should alpha be the max value?

      no, alpha is 1.0

    * treatment of alpha in general - whenever it would have been set to
      1.0 it continues to be 1.0 not <max>

    * do the ONE_MINUS* blend functions change?  no.  they are still 1.0-x
      If the resulting value is negative it is clamped to <min> not 0.
      Same is true for texture environment calculations.

    * do transparent pixel values need to be embellished?

    * floating point representations need some more clarification:
        1. internal formats  (need new extensions for these)
        2. logic op          (operates on mantissa or on the raw value?)
        3. color table lookups (raw bits or clamped[0,1]
        4. color indices     - not supported
        5. GLX_{RGBA}_SIZE   - returns number of bits in the representation

    * float versions of glXGetFBConfigAttribSGIX?   YES!

    * is clamp to [0,1] behavior necessary?  it could be useful to have this
      behavior where colors are used for blend factors in the texture
      environment and color buffer blending operations.

    * Is this extension SGI, SGIX, or SGIS?  SGIS, because it does not
      apply to all SGI platforms, however unlike SGIX, is intended for
      wide acceptance.


New Procedures and Functions

    None


New Tokens


        EXTENDED_RANGE_SGIS             0x85A5
        MIN_RED_SGIS                    0x85A6
        MAX_RED_SGIS                    0x85A7
        MIN_GREEN_SGIS                  0x85A8
        MAX_GREEN_SGIS                  0x85A9
        MIN_BLUE_SGIS                   0x85AA
        MAX_BLUE_SGIS                   0x85AB
        MIN_ALPHA_SGIS                  0x85AC
        MAX_ALPHA_SGIS                  0x85AD



