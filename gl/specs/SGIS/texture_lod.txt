Name

    SGIS_texture_lod

Name Strings

    GL_SGIS_texture_lod

Version

    $Date: 1997/05/30 01:34:44 $ $Revision: 1.8 $

Number

    24

Dependencies

    EXT_texture is required
    EXT_texture3D affects the definition of this extension
    EXT_texture_object affects the definition of this extension
    SGI_detail_texture affects the definition of this extension
    SGI_sharpen_texture affects the definition of this extension

Overview

    This extension imposes two constraints related to the texture level of
    detail parameter LOD, which is represented by the Greek character lambda
    in the GL Specification.  One constraint clamps LOD to a specified
    floating point range.  The other limits the selection of mipmap image
    arrays to a subset of the arrays that would otherwise be considered.

    Together these constraints allow a large texture to be loaded and
    used initially at low resolution, and to have its resolution raised
    gradually as more resolution is desired or available.  Image array
    specification is necessarily integral, rather than continuous.  By
    providing separate, continuous clamping of the LOD parameter, it is
    possible to avoid "popping" artifacts when higher resolution images
    are provided.

    Note: because the shape of the mipmap array is always determined by
    the dimensions of the level 0 array, this array must be loaded for
    mipmapping to be active.  If the level 0 array is specified with a
    null image pointer, however, no actual data transfer will take
    place.  And a sufficiently tuned implementation might not even
    allocate space for a level 0 array so specified until true image
    data were presented.

Issues

    *   Should detail and sharpen texture operate when the level 0 image
        is not being used?

        A: Sharpen yes, detail no.

    *   Should the shape of the mipmap array be determined by the
        dimensions of the level 0 array, regardless of the base level?

        A: Yes, this is the better solution.  Driving everything from
           the base level breaks the proxy query process, and allows
           mipmap arrays to be placed arbitrarily.  The issues of
           requiring a level 0 array are partially overcome by the use
           of null-point loads, which avoid data transfer and,
           potentially, data storage allocation.

    *   With the arithmetic as it is, a linear filter might access an
        array past the limit specified by MAX_LEVEL or p.  But the
        results of this access are not significant, because the blend
        will weight them as zero.

New Procedures and Functions

    None

New Tokens


        TEXTURE_MIN_LOD_SGIS            0x813A
        TEXTURE_MAX_LOD_SGIS            0x813B
        TEXTURE_BASE_LEVEL_SGIS         0x813C
        TEXTURE_MAX_LEVEL_SGIS          0x813D

