Name

    SGI_color_table

Name Strings

    GL_SGI_color_table

Version

    $Date: 1997/03/24 22:02:31 $ $Revision: 1.32 $

Number

    14

Dependencies

    EXT_abgr affects the definition of this extension
    EXT_texture is required
    EXT_texture3D affects the definition of this extension
    EXT_subtexture affects the defnition of this extension
    EXT_copy_texture affects the definition of this extension
    EXT_convolution affects the definition of this extension
    SGI_color_matrix affects the definition of this extension

Overview

    This extension defines a new RGBA-format color lookup mechanism.  It does
    not replace the color lookups defined by the GL Specification, but rather
    provides additional lookup capabilities with different operation.  The key
    difference is that the new lookup tables are treated as 1-dimensional images
    with internal formats, like texture images and convolution filter images.
    From this follows the fact that the new tables can operate on a subset of
    the components of passing pixel groups.  For example, a table with internal
    format ALPHA modifies only the A component of each pixel group, leaving the
    R, G, and B components unmodified.

    If EXT_copy_texture is implemented, this extension also defines methods to
    initialize the color lookup tables from the framebuffer, in addition to the
    standard memory source mechanisms.

Issues

    *	Should a minimum maximum-table-size be imposed?  That is, should all
	implementations support a table size of 256 entries?

New Procedures and Functions

    void ColorTableSGI(enum target,
		       enum internalformat,
		       sizei width,
		       enum format,
		       enum type,
		       const void* table);

    void CopyColorTableSGI(enum target,
			   enum internalformat,
			   int x,
			   int y,
			   sizei width);

    void ColorTableParameterivSGI(enum target,
				  enum pname,
				  const int* params);

    void ColorTableParameterfvSGI(enum target,
				  enum pname,
				  const float* params);

    void GetColorTableSGI(enum target,
			  enum format,
			  enum type,
			  void* table);

    void GetColorTableParameterivSGI(enum target,
				     enum pname,
				     int* params);

    void GetColorTableParameterfvSGI(enum target,
				     enum pname,
				     float* params);

New Tokens


	COLOR_TABLE_SGI					0x80D0
	POST_CONVOLUTION_COLOR_TABLE_SGI		0x80D1
	POST_COLOR_MATRIX_COLOR_TABLE_SGI		0x80D2


	PROXY_COLOR_TABLE_SGI				0x80D3
	PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI		0x80D4
	PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI		0x80D5


	COLOR_TABLE_SCALE_SGI				0x80D6
	COLOR_TABLE_BIAS_SGI				0x80D7


	COLOR_TABLE_FORMAT_SGI				0x80D8
	COLOR_TABLE_WIDTH_SGI				0x80D9
	COLOR_TABLE_RED_SIZE_SGI			0x80DA
	COLOR_TABLE_GREEN_SIZE_SGI			0x80DB
	COLOR_TABLE_BLUE_SIZE_SGI			0x80DC
	COLOR_TABLE_ALPHA_SIZE_SGI			0x80DD
	COLOR_TABLE_LUMINANCE_SIZE_SGI			0x80DE
	COLOR_TABLE_INTENSITY_SIZE_SGI			0x80DF

