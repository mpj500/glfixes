Name

    SGI_texture_color_table

Name Strings

    GL_SGI_texture_color_table

Contact

    Silicon Graphics, Inc.
    Brian Paul (brian_e_paul 'at' yahoo.com)

Status

    Shipping.

Version

    $Date: 1998/03/14 07:42:15 $ $Revision: 1.1 $

Number

    17

Dependencies

    EXT_abgr affects the definition of this extension
    EXT_texture is required
    EXT_copy_texture affects the definition of this extension
    ARB_multitexture affects the definition of this extension
    The extension is written against the OpenGL 1.0 Specification

Overview

    This extension adds a color lookup table to the texture mechanism.
    The table is applied to the filtered result of a texture lookup,
    before that result is used in the texture environment equations.

    The definition and application of the texture color table are
    similar to those of the color tables defined in SGI_color_table,
    though it is not necessary for that extension to be implemented.

    Texture color tables can be used to expand luminance or intensity
    textures to full RGBA, and also to linearize the results of color
    space conversions implemented by multidimensional texture table
    lookup.

    This specification has been updated to define its interaction with
    multitexture.

Issues

    1.	Should the scale, bias, and clamp that is applied to texels
	be moved to a separate SGIX extension?

	Done.  See GL_SGIX_texture_scale_bias.

    2.  It should be clarified that this state is NOT part of
	EXT_texture_object.  The color table state is per texture unit.

    3. 	Can the texture format change while passing thru the texture
	color table?

	This possibility is mentioned in the overview.  An example of
	when this is useful is an RGBA table applied to a LUMINANCE
	texture.  This expands LUMINANCE to full RGBA.  The table
	defined below does not account for this.

	The specification has been changed to map all texture components
	to Rt, Gt, Bt, At and now the table is always applied to all 4
	components.

    4. 	Do we want to query MAX_TEXTURE_COLOR_TABLE_WIDTH_SGI in
	addition to PROXY method?

	No, this should be done with PROXY.

    5.  Is one texture color table shared by all texture units or is
	there a separate color table for each texture unit?

	Vendors shipping both ARB_multitexture and SGI_texture_color_table
	report that they've implemented per-texture unit tables.

	The texure color table enable flag is also per-texture unit.

    6.	Is the proxy texture color table per context or per texture unit
	state?

	After talking to IBM and 3Dlabs, the consensus is that there is a
	separate proxy texture color table for each texture unit.

    7.	Is the texture color table scale and bias values per context or
	per texture unit?

	Consensus is that there is one set of scale and bias values shared
	for all texture units.  It's part of the pixel state group.

    8.  What if there is a different number of texture image units and
	texture coordinate units (ala NV_fragment_program)?

	The number of texture image units determines the number of texture
	color tables.  All occurances of "texture unit" should be read as
	"texture image unit".

    9.  Has this extension specification changed recently?

	It's been updated to clarify how it interacts with multitexture.
	Also, various cosmetic clean-ups have been made.



New Procedures and Functions

    None

New Tokens


	TEXTURE_COLOR_TABLE_SGI		0x80BC


	PROXY_TEXTURE_COLOR_TABLE_SGI	0x80BD

