Name

    APPLE_element_array

Name Strings

    GL_APPLE_element_array

Contact

    Bob Beretta, Apple Computer (beretta 'at' apple.com)

Version

    1.0

Number

    271

Dependencies

    Written based on the wording of the OpenGL 1.3 specification.

    Assumes support for the APPLE_vertex_array_range extension.

Overview

    This extension provides facilities to improve DrawElements style vertex
    indices submission performance by allowing index arrays.  Using this
    extension these arrays can be contained inside a vertex array range and
    thus pulled directly by the graphics processor, avoiding the CPU overhead
    of touching the index data.

    This extension is most useful when used in conjunction with the
    APPLE_vertex_array_range extension. APPLE_vertex_array_range provides an
    interface for storing vertex array data. In cases where large amounts of
    vertex data are in use, the index data used to construct primitives
    (typically as passed to the GL through DrawElements) can impose a
    significant bandwidth burden. APPLE_element_array allows the application to
    specify independent arrays of elements, which can then be cached using
    APPLE_vertex_array_range.  In effect this creates a more orthogonal
    interface for both vertex indices and data.


Issues

    Must the element array be enabled?

        RESOLVED: Yes, for orthogonality with the rest of the API.

New Procedures and Functions

    void ElementPointerAPPLE(enum type, const void *pointer);

    void DrawElementArrayAPPLE(enum mode, int first, sizei count)

    void DrawRangeElementArrayAPPLE(enum mode, uint start,
                                    uint end, int first, sizei count)

    void MultiDrawElementArrayAPPLE(enum mode, const int *first,
                                    const sizei *count, sizei primcount);

    void MultiDrawRangeElementArrayAPPLE(enum mode, uint start, uint end,
                                         const int *first,
                                         const sizei *count,
                                         sizei primcount);


New Tokens


        ELEMENT_ARRAY_APPLE             0x8A0C


        ELEMENT_ARRAY_TYPE_APPLE        0x8A0D


        ELEMENT_ARRAY_POINTER_APPLE     0x8A0E


