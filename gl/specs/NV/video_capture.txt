Name

    NV_video_capture

Name Strings

    GL_NV_video_capture
    GLX_NV_video_capture
    WGL_NV_video_capture
Contributors

    James Jones
    Robert Morell
    Andy Ritger
    Antonio Tejada
    Thomas True

Contact

    James Jones, NVIDIA Corporation (jajones 'at' nvidia.com)

Status

    Complete.  Shipping in NVIDIA 190.XX drivers

Version

    Last Modified Date: Jul 8, 2011
    Author Revision: 24

Number

    374

Dependencies

    OpenGL 2.0 is required.

    ARB_vertex_buffer_object is required.

    EXT_framebuffer_object is required.

    EXT_timer_query is required for 64-bit integer type definitions
    only.

    NV_present_video is required for the definition of the FRAME_NV
    token and the wglQueryCurrentContextNV function only.

    Written based on the wording of the OpenGL 3.0 specification.

New Procedures and Functions

    void BeginVideoCaptureNV(uint video_capture_slot);

    void BindVideoCaptureStreamBufferNV(uint video_capture_slot,
                                        uint stream, enum frame_region,
                                        intptrARB offset);

    void BindVideoCaptureStreamTextureNV(uint video_capture_slot,
                                         uint stream, enum frame_region,
                                         enum target, uint texture);

    void EndVideoCaptureNV(uint video_capture_slot);

    void GetVideoCaptureivNV(uint video_capture_slot, enum pname,
                             int *params);

    void GetVideoCaptureStream{i,f,d}vNV(uint video_capture_slot,
                                         uint stream, enum pname,
                                         T *params);

    enum VideoCaptureNV(uint video_capture_slot, uint *sequence_num,
                        uint64EXT *capture_time);

    void VideoCaptureStreamParameter{i,f,d}vNV(uint video_capture_slot,
                                               uint stream,
                                               GLenum pname,
                                               const T *params);


    int glXBindVideoCaptureDeviceNV(Display *dpy,
                                    unsigned int video_capture_slot,
                                    GLXVideoCaptureDeviceNV device);

    GLXVideoCaptureDeviceNV *
        glXEnumerateVideoCaptureDevicesNV(Display *dpy, int screen,
                                          int *nelements);

    void glXLockVideoCaptureDeviceNV(Display *dpy,
                                     GLXVideoCaptureDeviceNV device);

    int glXQueryVideoCaptureDeviceNV(Display *dpy,
                                     GLXVideoCaptureDeviceNV device,
                                     int attribute, int *value);

    void glXReleaseVideoCaptureDeviceNV(Display *dpy,
                                        GLXVideoCaptureDeviceNV device);


    BOOL wglBindVideoCaptureDeviceNV(UINT uVideoSlot,
                                     HVIDEOINPUTDEVICENV hDevice);

    UINT wglEnumerateVideoCaptureDevicesNV(HDC hDc,
                                     HVIDEOINPUTDEVICENV *phDeviceList);

    BOOL wglLockVideoCaptureDeviceNV(HDC hDc,
                                     HVIDEOINPUTDEVICENV hDevice);

    BOOL wglQueryVideoCaptureDeviceNV(HDC hDc,
                                      HVIDEOINPUTDEVICENV hDevice,
                                      int iAttribute, int *piValue);

    BOOL wglReleaseVideoCaptureDeviceNV(HDC hDc,
                                        HVIDEOINPUTDEVICENV hDevice);

New Types

    typedef XID GLXVideoCaptureDeviceNV

    DECLARE_HANDLE(HVIDEOINPUTDEVICENV);

New Tokens


        VIDEO_BUFFER_NV                            0x9020


        VIDEO_BUFFER_BINDING_NV                    0x9021


        FIELD_UPPER_NV                             0x9022
        FIELD_LOWER_NV                             0x9023


        NUM_VIDEO_CAPTURE_STREAMS_NV               0x9024
        NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV        0x9025


        LAST_VIDEO_CAPTURE_STATUS_NV               0x9027
        VIDEO_BUFFER_PITCH_NV                      0x9028
        VIDEO_CAPTURE_FRAME_WIDTH_NV               0x9038
        VIDEO_CAPTURE_FRAME_HEIGHT_NV              0x9039
        VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV        0x903A
        VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV        0x903B
        VIDEO_CAPTURE_TO_422_SUPPORTED_NV          0x9026


        VIDEO_COLOR_CONVERSION_MATRIX_NV           0x9029
        VIDEO_COLOR_CONVERSION_MAX_NV              0x902A
        VIDEO_COLOR_CONVERSION_MIN_NV              0x902B
        VIDEO_COLOR_CONVERSION_OFFSET_NV           0x902C
        VIDEO_BUFFER_INTERNAL_FORMAT_NV            0x902D
        VIDEO_CAPTURE_SURFACE_ORIGIN_NV            0x903C


        PARTIAL_SUCCESS_NV                         0x902E


        SUCCESS_NV                                 0x902F
        FAILURE_NV                                 0x9030


        YCBYCR8_422_NV                             0x9031
        YCBAYCR8A_4224_NV                          0x9032
        Z6Y10Z6CB10Z6Y10Z6CR10_422_NV              0x9033
        Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV   0x9034
        Z4Y12Z4CB12Z4Y12Z4CR12_422_NV              0x9035
        Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV   0x9036
        Z4Y12Z4CB12Z4CR12_444_NV                   0x9037


        GLX_DEVICE_ID_NV                           0x20CD


        GLX_NUM_VIDEO_CAPTURE_SLOTS_NV             0x20CF


        GLX_UNIQUE_ID_NV                           0x20CE


        WGL_NUM_VIDEO_CAPTURE_SLOTS_NV             0x20CF


        WGL_UNIQUE_ID_NV                           0x20CE


