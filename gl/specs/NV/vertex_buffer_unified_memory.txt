Name

    NV_vertex_buffer_unified_memory

Name Strings

    GL_NV_vertex_buffer_unified_memory

Contact

    Jeff Bolz, NVIDIA Corporation (jbolz 'at' nvidia.com)

Contributors

    Mark Kilgard, NVIDIA
    Jason Sams, NVIDIA
    Eric Werness, NVIDIA

Status

    Complete

Version

    Last Modified Date: September 9, 2009
    Author Revision: 1.0

Number

    380

Dependencies

    Written based on the wording of the OpenGL 3.0 specification.

    This extension interacts with NV_shader_buffer_load. 

    This extension interacts with EXT_direct_state_access. 

    This extension interacts with ARB_compatibility.

Overview

    This extension provides a mechanism to specify vertex attrib and
    element array locations using GPU addresses.

    Binding vertex buffers is one of the most frequent and expensive
    operations in many GL applications, due to the cost of chasing 
    pointers and binding objects described in the Overview of 
    NV_shader_buffer_load. The intent of this extension is to enable a 
    way for the application to specify vertex attrib state that alleviates
    the overhead of object binds and driver memory management.

New Procedures and Functions

    void BufferAddressRangeNV(enum pname, uint index, uint64EXT address,
                              sizeiptr length);

    void VertexFormatNV(int size, enum type, sizei stride);
    void NormalFormatNV(enum type, sizei stride);
    void ColorFormatNV(int size, enum type, sizei stride);
    void IndexFormatNV(enum type, sizei stride);
    void TexCoordFormatNV(int size, enum type, sizei stride);
    void EdgeFlagFormatNV(sizei stride);
    void SecondaryColorFormatNV(int size, enum type, sizei stride);
    void FogCoordFormatNV(enum type, sizei stride);
    void VertexAttribFormatNV(uint index, int size, enum type,
                              boolean normalized, sizei stride);
    void VertexAttribIFormatNV(uint index, int size, enum type,
                               sizei stride);

    void GetIntegerui64i_vNV(enum value, uint index, uint64EXT result[]);

New Tokens


        VERTEX_ATTRIB_ARRAY_UNIFIED_NV                 0x8F1E
        ELEMENT_ARRAY_UNIFIED_NV                       0x8F1F


        VERTEX_ATTRIB_ARRAY_ADDRESS_NV                 0x8F20
        TEXTURE_COORD_ARRAY_ADDRESS_NV                 0x8F25


        VERTEX_ARRAY_ADDRESS_NV                        0x8F21
        NORMAL_ARRAY_ADDRESS_NV                        0x8F22
        COLOR_ARRAY_ADDRESS_NV                         0x8F23
        INDEX_ARRAY_ADDRESS_NV                         0x8F24
        EDGE_FLAG_ARRAY_ADDRESS_NV                     0x8F26
        SECONDARY_COLOR_ARRAY_ADDRESS_NV               0x8F27
        FOG_COORD_ARRAY_ADDRESS_NV                     0x8F28
        ELEMENT_ARRAY_ADDRESS_NV                       0x8F29


        VERTEX_ATTRIB_ARRAY_LENGTH_NV                  0x8F2A
        TEXTURE_COORD_ARRAY_LENGTH_NV                  0x8F2F


        VERTEX_ARRAY_LENGTH_NV                         0x8F2B
        NORMAL_ARRAY_LENGTH_NV                         0x8F2C
        COLOR_ARRAY_LENGTH_NV                          0x8F2D
        INDEX_ARRAY_LENGTH_NV                          0x8F2E
        EDGE_FLAG_ARRAY_LENGTH_NV                      0x8F30
        SECONDARY_COLOR_ARRAY_LENGTH_NV                0x8F31
        FOG_COORD_ARRAY_LENGTH_NV                      0x8F32
        ELEMENT_ARRAY_LENGTH_NV                        0x8F33


