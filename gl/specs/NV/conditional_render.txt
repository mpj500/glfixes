Name

    NV_conditional_render

Name Strings

    GL_NV_conditional_render

Contact

    Eric Werness, NVIDIA (ewerness 'at' nvidia.com)
    Pat Brown, NVIDIA (pbrown 'at' nvidia.com)

Contributors

    Daniel Koch, NVIDIA

Status

    Shipping.

Version

    Last Modified Date:         05/26/2014
    NVIDIA Revision:            6

Number

    OpenGL Extension #346
    OpenGL ES Extension #198

Dependencies

    The extension is written against the OpenGL 2.0 Specification.

    ARB_occlusion_query or OpenGL 1.5 is required in an OpenGL
    implementation.

    This extension interacts with NVX_conditional_render.

    This extension interacts with ARB_occlusion_query2.

    This extension interacts with ARB_ES3_compatibility.

    This extension interacts trivially with the OpenGL compatibility profile.

    This extension interacts with OpenGL 3.0, 3.2, 3.3, and 4.3

    EXT_occlusion_query_boolean or OpenGL ES 3.0 is required in an OpenGL ES
    implementation.

    This extension interacts with EXT_occlusion_query_boolean.

    This extension interacts with NV_occlusion_query_samples.

    This extension interacts with OpenGL ES 3.0.

Overview

    This extension provides support for conditional rendering based on the
    results of an occlusion query.  This mechanism allows an application to
    potentially reduce the latency between the completion of an occlusion
    query and the rendering commands depending on its result.  It additionally
    allows the decision of whether to render to be made without application
    intervention.

    This extension defines two new functions, BeginConditionalRenderNV and
    EndConditionalRenderNV, between which rendering commands may be discarded
    based on the results of an occlusion query.  If the specified occlusion
    query returns a non-zero value, rendering commands between these calls are
    executed.  If the occlusion query returns a value of zero, all rendering
    commands between the calls are discarded.

    If the occlusion query results are not available when
    BeginConditionalRenderNV is executed, the <mode> parameter specifies
    whether the GL should wait for the query to complete or should simply
    render the subsequent geometry unconditionally.

    Additionally, the extension provides a set of "by region" modes, allowing
    for implementations that divide rendering work by screen regions to
    perform the conditional query test on a region-by-region basis without
    checking the query results from other regions.  Such a mode is useful for
    cases like split-frame SLI, where a frame is divided between multiple
    GPUs, each of which has its own occlusion query hardware.


New Procedures and Functions

    void BeginConditionalRenderNV(uint id, enum mode);
    void EndConditionalRenderNV(void);


New Tokens


        QUERY_WAIT_NV                                   0x8E13
        QUERY_NO_WAIT_NV                                0x8E14
        QUERY_BY_REGION_WAIT_NV                         0x8E15
        QUERY_BY_REGION_NO_WAIT_NV                      0x8E16


