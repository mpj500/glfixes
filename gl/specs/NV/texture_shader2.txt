Name
    
    NV_texture_shader2

Name Strings

    GL_NV_texture_shader2

Contact

    Mark J. Kilgard, NVIDIA Corporation (mjk 'at' nvidia.com)

Notice

    Copyright NVIDIA Corporation, 1999, 2000, 2001.

IP Status

    NVIDIA Proprietary.

Version

    NVIDIA Date:  April 29, 2004
    Version:      9

Number

    231

Dependencies

    Written based on the wording of the OpenGL 1.2.1 specification,
    augmented by the NV_texture_shader extension specification.

    Requires support for the NV_texture_shader extension.

Overview

    This extension extends the NV_texture_shader functionality to
    support texture shader operations for 3D textures.

    See the NV_texture_shader extension for information about the
    texture shader operational model.

    The two new texture shader operations are:

    <conventional textures>

    22.  TEXTURE_3D - Accesses a 3D texture via (s/q,t/q,r/q).

    <dot product textures>

    23.  DOT_PRODUCT_TEXTURE_3D_NV - When preceded by two DOT_PRODUCT_NV
         programs in the previous two texture shader stages, computes a
         third similar dot product and composes the three dot products
         into (s,t,r) texture coordinate set to access a 3D non-projective
         texture.

Issues

    Why a separate extension?

      Not all implementations of NV_texture_shader will support 3D
      textures in hardware.

      Breaking this extension out into a distinct extension allows OpenGL
      programs that only would use 3D textures if they are supported
      in hardware to determine whether hardware support is available by
      explicitly looking for the NV_texture_shader2 extension.

    What if an implementation wanted to support NV_texture_shader2
    operations within a software rasterizer?

      Implementations should be free to implement the 3D texture texture
      shader operations in software.  In this case, the implementation
      should NOT advertise the NV_texture_shader2 extension, but should
      still accept the GL_TEXTURE_3D and GL_DOT_PRODUCT_TEXTURE_3D_NV
      texture shader operations without an error.  Likewise, the
      glTexImage3D command should accept the new internal texture formats,
      formats, and types allowed by this extension should be accepted
      without an error.

      When NV_texture_shader2 is not advertised in the GL_EXTENSIONS
      string, but the extension functionality works without GL errors,
      programs should expect that these two texture shader operations
      are slow.

New Procedures and Functions

    None.

New Tokens


        DOT_PRODUCT_TEXTURE_3D_NV                 0x86EF


        HILO_NV                                   0x86F4
        DSDT_NV                                   0x86F5
        DSDT_MAG_NV                               0x86F6
        DSDT_MAG_VIB_NV                           0x86F7


        UNSIGNED_INT_S8_S8_8_8_NV                 0x86DA 
        UNSIGNED_INT_8_8_S8_S8_REV_NV             0x86DB 


        SIGNED_RGBA_NV                            0x86FB
        SIGNED_RGBA8_NV                           0x86FC
        SIGNED_RGB_NV                             0x86FE
        SIGNED_RGB8_NV                            0x86FF
        SIGNED_LUMINANCE_NV                       0x8701
        SIGNED_LUMINANCE8_NV                      0x8702
        SIGNED_LUMINANCE_ALPHA_NV                 0x8703
        SIGNED_LUMINANCE8_ALPHA8_NV               0x8704
        SIGNED_ALPHA_NV                           0x8705
        SIGNED_ALPHA8_NV                          0x8706
        SIGNED_INTENSITY_NV                       0x8707
        SIGNED_INTENSITY8_NV                      0x8708
        SIGNED_RGB_UNSIGNED_ALPHA_NV              0x870C
        SIGNED_RGB8_UNSIGNED_ALPHA8_NV            0x870D


        HILO16_NV                                 0x86F8
        SIGNED_HILO_NV                            0x86F9
        SIGNED_HILO16_NV                          0x86FA
        DSDT8_NV                                  0x8709
        DSDT8_MAG8_NV                             0x870A
        DSDT_MAG_INTENSITY_NV                     0x86DC
        DSDT8_MAG8_INTENSITY8_NV                  0x870B

