Name

    NV_transform_feedback2

Name Strings

    GL_NV_transform_feedback2

Contact

    Pat Brown, NVIDIA Corporation (pbrown 'at' nvidia.com)

Status

    Shipping for GeForce GTX 280 & 260, June 16, 2008

Version

    Last Modified Date:         11/19/2008
    NVIDIA Revision:            4

Number

    358

Dependencies

    OpenGL 1.5 is required.

    NV_transform_feedback or EXT_transform_feedback is required.  

    This extension is written against the OpenGL 2.1 Specification.

    This extension is written against a combination of the
    NV_transform_feedback and EXT_transform_feedback extension
    specifications.


Overview

    The NV_transform_feedback and EXT_transform_feedback extensions allow
    applications to capture primitives to one or more buffer objects when
    transformed by the GL.  This extension provides a few additional
    capabilities to these extensions, making transform feedback mode
    more useful.

    First, it provides transform feedback objects encapsulating transform
    feedback-related state, allowing applications to replace the entire
    transform feedback configuration in a single bind call.  Second, it
    provides the ability to pause and resume transform feedback operations.
    When transform feedback is paused, applications may render without
    transform feedback or may use transform feedback with different state and
    a different transform feedback object.  When transform feedback is
    resumed, additional primitives are captured and appended to previously
    captured primitives for the object.

    Additionally, this extension provides the ability to draw primitives
    captured in transform feedback mode without querying the captured
    primitive count.  The command DrawTransformFeedbackNV() is equivalent to
    glDrawArrays(<mode>, 0, <count>), where <count> is the number of vertices
    captured to buffer objects during the last transform feedback capture
    operation on the transform feedback object used.  This draw operation only
    provides a vertex count -- it does not automatically set up vertex array
    state or vertex buffer object bindings, which must be done separately by
    the application.

New Procedures and Functions

    void BindTransformFeedbackNV(enum target, uint id);
    void DeleteTransformFeedbacksNV(sizei n, const uint *ids);
    void GenTransformFeedbacksNV(sizei n, uint *ids);
    boolean IsTransformFeedbackNV(uint id);

    void PauseTransformFeedbackNV(void);
    void ResumeTransformFeedbackNV(void);

    void DrawTransformFeedbackNV(enum mode, uint id);

New Tokens


      TRANSFORM_FEEDBACK_NV                             0x8E22


      TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV               0x8E23
      TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV               0x8E24
      TRANSFORM_FEEDBACK_BINDING_NV                     0x8E25

