Name

    NV_viewport_array2

Name Strings

    GL_NV_viewport_array2

Contact

    Jeff Bolz, NVIDIA Corporation (jbolz 'at' nvidia.com)
    Pat Brown, NVIDIA Corporation (pbrown 'at' nvidia.com)

Contributors

    Pat Brown, NVIDIA
    Mathias Heyer, NVIDIA

Status

    Shipping

Version

    Last Modified Date:         March 27, 2015
    Revision:                   2

Number

    OpenGL Extension #476
    OpenGL ES Extension #237

Dependencies

    This extension is written against the OpenGL 4.3 specification
    (Compatibility Profile).

    This extension interacts with the OpenGL ES 3.1 (March 17, 2014)
    specification.

    If implemented in OpenGL ES, NV_viewport_array, EXT_geometry_shader
    and EXT_shader_io_blocks are required.

    This extension interacts with EXT_tessellation_shader.

    This extension interacts with NV_geometry_shader_passthrough.

    This extension interacts with NV_gpu_program4.

Overview

    This extension provides new support allowing a single primitive to be
    broadcast to multiple viewports and/or multiple layers.  A shader output
    gl_ViewportMask[] is provided, allowing a single primitive to be output to
    multiple viewports simultaneously.  Also, a new shader option is provided
    to control whether the effective viewport index is added into gl_Layer.
    These capabilities allow a single primitive to be output to multiple
    layers simultaneously.

    The gl_ViewportMask[] output is available in vertex, tessellation
    control, tessellation evaluation, and geometry shaders. gl_ViewportIndex
    and gl_Layer are also made available in all these shader stages. The
    actual viewport index or mask and render target layer values are taken
    from the last active shader stage from this set of stages.

    This extension is a superset of the GL_AMD_vertex_shader_layer and
    GL_AMD_vertex_shader_viewport_index extensions, and thus those extension
    strings are expected to be exported if GL_NV_viewport_array2 is
    supported. This extension includes the edits for those extensions, recast
    against the reorganized OpenGL 4.3 specification.

New Procedures and Functions

    None.

New Tokens


