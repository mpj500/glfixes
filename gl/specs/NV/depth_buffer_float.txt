Name

    NV_depth_buffer_float

Name Strings

    GL_NV_depth_buffer_float

Contributors

    Pat Brown
    Mike Strauss

Contact

    Mike Strauss, NVIDIA Corporation (mstrauss 'at' nvidia.com)    

Status

    Shipping for GeForce 8 Series (November 2006) 

Version

    Last Modified Date:         07/27/2010
    NVIDIA Revision:            11

Number

    334

Dependencies

    OpenGL 2.0 is required.

    ARB_color_buffer_float is required.

    EXT_packed_depth_stencil is required.

    EXT_framebuffer_object is required.
    
    This extension modifies EXT_depth_bounds_test.

    This extension modifies NV_copy_depth_to_color.

    This extension interacts with ARB_depth_buffer_float.

    This extension is written against the OpenGL 2.0 specification.

Overview

    This extension provides new texture internal formats whose depth
    components are stored as 32-bit floating-point values, rather than the
    normalized unsigned integers used in existing depth formats.
    Floating-point depth textures support all the functionality supported for
    fixed-point depth textures, including shadow mapping and rendering support
    via EXT_framebuffer_object.  Floating-point depth textures can store
    values outside the range [0,1].

    By default, OpenGL entry points taking depth values implicitly clamp the
    values to the range [0,1].  This extension provides new DepthClear,
    DepthRange, and DepthBoundsEXT entry points that allow applications to
    specify depth values that are not clamped.

    Additionally, this extension provides new packed depth/stencil pixel
    formats (see EXT_packed_depth_stencil) that have 64-bit pixels consisting
    of a 32-bit floating-point depth value, 8 bits of stencil, and 24 unused
    bites.  A packed depth/stencil texture internal format is also provided.

    This extension does not provide support for WGL or GLX pixel formats with
    floating-point depth buffers.  The existing (but not commonly used)
    WGL_EXT_depth_float extension could be used for this purpose.


New Procedures and Functions

    void DepthRangedNV(double n, double f);
    void ClearDepthdNV(double d);
    void DepthBoundsdNV(double zmin, double zmax);

New Tokens


        DEPTH_COMPONENT32F_NV                           0x8DAB
        DEPTH32F_STENCIL8_NV                            0x8DAC


        FLOAT_32_UNSIGNED_INT_24_8_REV_NV               0x8DAD


        DEPTH_BUFFER_FLOAT_MODE_NV                      0x8DAF

