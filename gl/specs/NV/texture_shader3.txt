Name
    
    NV_texture_shader3

Name Strings

    GL_NV_texture_shader3

Contact

    Mark J. Kilgard, NVIDIA Corporation (mjk 'at' nvidia.com)

Notice

    Copyright NVIDIA Corporation, 2001.

IP Status

    NVIDIA Proprietary.

Version

    NVIDIA Date:  March 5, 2007
    Version:      11

Number

    265

Dependencies

    Written based on the wording of the OpenGL 1.2.1 specification,
    augmented by the NV_texture_shader and NV_texture_shader2 extension
    specifications.

    Requires support for the NV_texture_shader extension.

    Requires support for the NV_texture_shader2 extension.

Overview

    NV_texture_shader3 extends the NV_texture_shader functionality by
    adding several new texture shader operations, extending several
    existing texture shader operations, adding a new HILO8 internal
    format, and adding new and more flexible re-mapping modes for dot
    product and dependent texture shader operations.

    See the NV_texture_shader extension for information about the
    texture shader operational model.

    The fourteen new texture shader operations are:

    <offset textures>

    24.  OFFSET_PROJECTIVE_TEXTURE_2D_NV - Transforms the signed (ds,dt)
         components of a previous texture unit by a 2x2 floating-point
         matrix and then uses the result to offset the stage's texture
         coordinates for a 2D non-projective texture.

    25.  OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV - Same as above except
         the magnitude component of the previous texture unit result
         scales the red, green, and blue components of the unsigned RGBA
         texture 2D access.

    26.  OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV - Similar to
         OFFSET_TEXTURE_2D_NV except that the texture access is into a
         rectangular non-projective texture.

    27.  OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV - Similar to
         OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV except that the texture
         access is into a rectangular non-projective texture.

    28.  OFFSET_HILO_TEXTURE_2D_NV - Similar to OFFSET_TEXTURE_2D_NV
         but uses a (higher-precision) HILO base format texture rather
         than a DSDT-type base format.

    29.  OFFSET_HILO_TEXTURE_RECTANGLE_NV - Similar to
         OFFSET_TEXTURE_RECTANGLE_NV but uses a (higher-precision)
         HILO base format texture rather than a DSDT-type base format.

    30.  OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV - Similar to
         OFFSET_PROJECTIVE_TEXTURE_2D_NV but uses a (higher-precision)
         HILO base format texture rather than a DSDT-type base format.

    31.  OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV - Similar to
         OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV but uses a
         (higher-precision) HILO base format texture rather than a
         DSDT-type base format.

         (There are no "offset HILO texture scale" operations because
         HILO textures have only two components with no third component
         for scaling.)

    <dependent textures>

    32.  DEPENDENT_HILO_TEXTURE_2D_NV - Converts the hi and lo components
         of a previous shader HILO result into an (s,t) texture coordinate
         set to access a 2D non-projective texture.

    33.  DEPENDENT_RGB_TEXTURE_3D_NV - Converts the red, green, and
         blue components of a previous shader RGBA result into an (s,t,r)
         texture coordinate set to access a 3D non-projective texture.

    34.  DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV - Converts the red, green,
         and blue components of a previous shader RGBA result into an
         (s,t,r) texture coordinate set to access a cube map texture.

    <dot product pass through>

    35.  DOT_PRODUCT_PASS_THROUGH_NV - Computes a dot product in the
         manner of the DOT_PRODUCT_NV operation and the result is [0,1]
         clamped and smeared to generate the texture unit RGBA result.

    <dot product textures>

    36.  DOT_PRODUCT_TEXTURE_1D_NV - Computes a dot product in the manner
         of the DOT_PRODUCT_NV operation and uses the result as the s
         texture coordinate to access a 2D non-projective texture.

    <dot product depth replace>

    37.  DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV - Computes a dot product
         in the manner of the DOT_PRODUCT_NV operation and the result
         is [0,1] clamped and replaces the fragment's window-space
         depth value.  The texture unit RGBA result is (0,0,0,0).

    Two new internal texture formats have been added: HILO8_NV and
    SIGNED_HILO8_NV.  These texture formats allow HILO textures to be
    stored in half the space; still the filtering for these internal
    texture formats is done with 16-bit precision.

    One new unsigned RGBA dot product mapping mode (FORCE_BLUE_TO_ONE_NV)
    forces the blue component to be 1.0 before computing a dot product.

Issues

    Should a HILO8_NV internal format be added?

      RESOLUTION:  Yes.  The HILO8_NV format allows HILO textures to
      take up half the space (16-bit HILO8_NV versus 32-bit HILO16_NV).
      Even though the texture is stored with 8-bit components, the
      interpolated precision can be assumed to be 16-bit.

    Should we generalize existing OFFSET_TEXTURE-style operations to
    support HILO textures and projective texturing, or should we just
    add more texture shader operations?

      RESOLUTION:  Add more texture shader operations for each distinct
      configuration.

      NV_texture_shader had consistency rules for OFFSET_TEXTURE
      operations that preclude consistency when used with HILO textures.
      Consistency is a defined behavior that should stay defined even with
      future extensions.  Adding specific new texture shader operation
      for HILO textures avoids having to redefine the consistency rules
      for DSDT-using OFFSET_TEXTURE operations.

      Rather than add a separate state that decides when OFFSET_TEXTURE
      is projective or not, we just add new operations.

New Procedures and Functions

    None.

New Tokens


        OFFSET_PROJECTIVE_TEXTURE_2D_NV                0x8850
        OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV          0x8851
        OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV         0x8852
        OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV   0x8853
        OFFSET_HILO_TEXTURE_2D_NV                      0x8854
        OFFSET_HILO_TEXTURE_RECTANGLE_NV               0x8855
        OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV           0x8856
        OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV    0x8857
        DEPENDENT_HILO_TEXTURE_2D_NV                   0x8858
        DEPENDENT_RGB_TEXTURE_3D_NV                    0x8859
        DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV              0x885A
        DOT_PRODUCT_PASS_THROUGH_NV                    0x885B
        DOT_PRODUCT_TEXTURE_1D_NV                      0x885C
        DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV            0x885D


        HILO8_NV                                       0x885E
        SIGNED_HILO8_NV                                0x885F


        FORCE_BLUE_TO_ONE_NV                           0x8860

