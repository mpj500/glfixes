Name

    NV_vertex_program2_option

Name Strings

    GL_NV_vertex_program2_option

Contact

    Pat Brown, NVIDIA Corporation (pbrown 'at' nvidia.com)

Status

    Shipping.

Version

    Last Modified:      06/23/2004
    NVIDIA Revision:    3

Number

    305

Dependencies

    ARB_vertex_program is required.

Overview

    This extension provides additional vertex program functionality
    to extend the standard ARB_vertex_program language and execution
    environment.  ARB programs wishing to use this added functionality
    need only add:

        OPTION NV_vertex_program2;

    to the beginning of their vertex programs.

    The functionality provided by this extension, which is roughly
    equivalent to that provided by the NV_vertex_program2 extension,
    includes:

      * general purpose dynamic branching,

      * subroutine calls,

      * data-dependent conditional write masks,

      * programmable user clip distances,

      * address registers with four components (instead of just one),

      * absolute value operator on scalar and swizzled operand loads,

      * rudimentary address register math,

      * SIN and COS trigonometry instructions, and

      * fully orthogonal "set on" instructions, including a "set sign"
        instruction.

Issues

    Why is this a separate extension, rather than just an additional
    feature of NV_vertex_program2?

      RESOLVED:  The NV_vertex_program2 specification was completed
      (with a published implementation) prior to the completion of
      ARB_vertex_program.  Future NVIDIA vertex program extensions should
      contain extensions to the ARB_vertex_program execution environment
      as a standard feature.

    NV_vertex_program1_1 contains one feature not found in
    ARB_vertex_program: the "RCC" (reciprocal clamped) instruction.
    Should a "NV_vertex_program1_1" program option be provided to expose
    this small amount of missing functionality?

      RESOLVED:  No.  By itself, that functionality is not all that
      interesting.

    Should this extension provide a mechanism to specify an "ARB"
    version of NV_vertex_program state programs (!!VSP1.0)?

      RESOLVED:  No.

    Should a similar option be provided to expose ARB_vertex_program
    features not found in NV_vertex_program (e.g., local parameters, state
    bindings, certain "macro" instructions) under the NV_vertex_program
    interface?

      RESOLVED:  No.  Why not just write an ARB program in that case?

    The ARB_vertex_program spec has a minor grammar bug that requires
    that inline scalar constants used as scalar operands include a
    component selector.  In other words, you have to say "11.0.x" to
    use the constant "11.0".  What should we do here?

      RESOLVED:  The NV_vertex_program2_option grammar will correct
      this problem, which should be fixed in future revisions to the
      ARB language.

New Procedures and Functions

    None.

New Tokens


        MAX_PROGRAM_EXEC_INSTRUCTIONS_NV                0x88F4
        MAX_PROGRAM_CALL_DEPTH_NV                       0x88F5

