Name

    NV_bindless_multi_draw_indirect

Name Strings

    GL_NV_bindless_multi_draw_indirect

Contact

    Christoph Kubisch, NVIDIA (ckubisch 'at' nvidia.com)

Contributors

    Jeff Bolz, NVIDIA
    Piers Daniell, NVIDIA
    Markus Tavenrath, NVIDIA
    Eric Werness, NVIDIA

Status

    Complete

Version

    Last Modified Date: January 5, 2015
    Revision: 2

Number

    OpenGL Extension #432

Dependencies

    NV_vertex_buffer_unified_memory is required.
    
    OpenGL 4.3 or ARB_multi_draw_indirect is required.

    The extension is written against the OpenGL 4.3 Specification, Core Profile.
    
Overview

    This extension combines NV_vertex_buffer_unified_memory and 
    ARB_multi_draw_indirect to allow the processing of multiple drawing
    commands, whose vertex and index data can be sourced from arbitrary 
    buffer locations, by a single function call.

    The NV_vertex_buffer_unified_memory extension provided a mechanism to 
    specify vertex attrib and element array locations using GPU addresses.
    Prior to this extension, these addresses had to be set through explicit
    function calls. Now the ability to set the pointer addresses indirectly
    by extending the GL_ARB_draw_indirect mechanism has been added.
    
    Combined with other "bindless" extensions, such as NV_bindless_texture and
    NV_shader_buffer_load, it is now possible for the GPU to create draw
    commands that source all resource inputs, which are common to change 
    frequently between draw calls from the GPU: vertex and index buffers, 
    samplers, images and other shader input data stored in buffers.
    

New Procedures and Functions

        void MultiDrawArraysIndirectBindlessNV(enum mode, 
                                               const void *indirect, 
                                               sizei drawCount, 
                                               sizei stride, 
                                               int vertexBufferCount);

        void MultiDrawElementsIndirectBindlessNV(enum mode, 
                                                 enum type, 
                                                 const void *indirect, 
                                                 sizei drawCount, 
                                                 sizei stride, 
                                                 int vertexBufferCount);

New Tokens


