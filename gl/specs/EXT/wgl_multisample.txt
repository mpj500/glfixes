Name

    EXT_multisample

Name Strings

    GL_EXT_multisample
    WGL_EXT_multisample

Version

    Last Modified Date: January 4, 1999
    Author Revision: 1.2

    Based on:  SGIS_Multisample Specification Revision 1.14

Number

    209

Dependencies

    WGL_EXT_extensions_string is required.
    WGL_EXT_pixel_format is required.

Overview

    This extension provides a mechanism to antialias all GL primitives:
    points, lines, polygons, bitmaps, and images.  The technique is to
    sample all primitives multiple times at each pixel.  The color sample
    values are resolved to a single, displayable color each time a pixel
    is updated, so the antialiasing appears to be automatic at the
    application level.  Because each sample includes depth and stencil
    information, the depth and stencil functions perform equivalently
    to the single-sample mode.

    An additional buffer, called the multisample buffer, is added to
    the framebuffer.  Pixel sample values, including color, depth, and
    stencil values, are stored in this buffer.  When the framebuffer
    includes a multisample buffer, it does not also include separate
    depth or stencil buffers, even if the multisample buffer does not
    store depth or stencil values.  Color buffers (left/right, front/
    back, and aux) do coexist with the multisample buffer, however.

    Multisample antialiasing is most valuable for rendering polygons,
    because it requires no sorting for hidden surface elimination, and
    it correctly handles adjacent polygons, object silhouettes, and
    even intersecting polygons.  If only points or lines are being
    rendered, the "smooth" antialiasing mechanism provided by the base
    GL may result in a higher quality image.  This extension is designed
    to allow multisample and smooth antialiasing techniques to be
    alternated during the rendering of a single scene.

Issues

    * Should SamplePatternEXT be eliminated?  Does anyone use this feature?

    * Should WGL_SAMPLE_BUFFERS_EXT and SAMPLE_BUFFERS_EXT be eliminated?
      Given the current specification, applications that query only
      WGL_SAMPLES_EXT will be written, taking zero to mean that there is
      no multisample buffer.

New Procedures and Functions

    void SampleMaskEXT(clampf value,
                       boolean invert);

    void SamplePatternEXT(enum pattern);

New Tokens


      WGL_SAMPLE_BUFFERS_EXT               0x2041
      WGL_SAMPLES_EXT                      0x2042


      MULTISAMPLE_EXT                      0x809D
      SAMPLE_ALPHA_TO_MASK_EXT             0x809E
      SAMPLE_ALPHA_TO_ONE_EXT              0x809F
      SAMPLE_MASK_EXT                      0x80A0


      MULTISAMPLE_BIT_EXT                  0x20000000


      1PASS_EXT                            0x80A1
      2PASS_0_EXT                          0x80A2
      2PASS_1_EXT                          0x80A3
      4PASS_0_EXT                          0x80A4
      4PASS_1_EXT                          0x80A5
      4PASS_2_EXT                          0x80A6
      4PASS_3_EXT                          0x80A7


      SAMPLE_BUFFERS_EXT                   0x80A8
      SAMPLES_EXT                          0x80A9
      SAMPLE_MASK_VALUE_EXT                0x80AA
      SAMPLE_MASK_INVERT_EXT               0x80AB
      SAMPLE_PATTERN_EXT                   0x80AC

