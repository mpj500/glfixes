Name

    EXT_gpu_shader4

Name Strings

    GL_EXT_gpu_shader4

Contact

    Barthold Lichtenbelt, NVIDIA (blichtenbelt 'at' nvidia.com)
    Pat Brown, NVIDIA (pbrown 'at' nvidia.com)

Status

    Multi vendor extension
 
    Shipping for GeForce 8 Series (November 2006) 

Version

    Last Modified Date:         12/14/2009
    Author revision:            16

Number

    326

Dependencies

    OpenGL 2.0 is required.

    This extension is written against the OpenGL 2.0 specification and version
    1.10.59 of the OpenGL Shading Language specification.

    This extension trivially interacts with ARB_texture_rectangle.

    This extension trivially interacts with GL_EXT_texture_array.

    This extension trivially interacts with GL_EXT_texture_integer.

    This extension trivially interacts with GL_EXT_geometry_shader4

    This extension trivially interacts with GL_EXT_texture_buffer_object.

    NV_primitive_restart trivially affects the definition of this extension.

    ARB_color_buffer_float affects the definition of this extension.
    EXT_draw_instanced affects the definition of this extension.

New Procedures and Functions

    void VertexAttribI1iEXT(uint index, int x);
    void VertexAttribI2iEXT(uint index, int x, int y);
    void VertexAttribI3iEXT(uint index, int x, int y, int z);
    void VertexAttribI4iEXT(uint index, int x, int y, int z, int w);

    void VertexAttribI1uiEXT(uint index, uint x);
    void VertexAttribI2uiEXT(uint index, uint x, uint y);
    void VertexAttribI3uiEXT(uint index, uint x, uint y, uint z);
    void VertexAttribI4uiEXT(uint index, uint x, uint y, uint z,
                            uint w);

    void VertexAttribI1ivEXT(uint index, const int *v);
    void VertexAttribI2ivEXT(uint index, const int *v);
    void VertexAttribI3ivEXT(uint index, const int *v);
    void VertexAttribI4ivEXT(uint index, const int *v);

    void VertexAttribI1uivEXT(uint index, const uint *v);
    void VertexAttribI2uivEXT(uint index, const uint *v);
    void VertexAttribI3uivEXT(uint index, const uint *v);
    void VertexAttribI4uivEXT(uint index, const uint *v);

    void VertexAttribI4bvEXT(uint index, const byte *v);
    void VertexAttribI4svEXT(uint index, const short *v);
    void VertexAttribI4ubvEXT(uint index, const ubyte *v);
    void VertexAttribI4usvEXT(uint index, const ushort *v);

    void VertexAttribIPointerEXT(uint index, int size, enum type,
                                sizei stride, const void *pointer);

    void GetVertexAttribIivEXT(uint index, enum pname, int *params);
    void GetVertexAttribIuivEXT(uint index, enum pname,
                               uint *params);

    void Uniform1uiEXT(int location, uint v0);
    void Uniform2uiEXT(int location, uint v0, uint v1);
    void Uniform3uiEXT(int location, uint v0, uint v1, uint v2);
    void Uniform4uiEXT(int location, uint v0, uint v1, uint v2,
                      uint v3);

    void Uniform1uivEXT(int location, sizei count, const uint *value);
    void Uniform2uivEXT(int location, sizei count, const uint *value);
    void Uniform3uivEXT(int location, sizei count, const uint *value);
    void Uniform4uivEXT(int location, sizei count, const uint *value);

    void GetUniformuivEXT(uint program, int location, uint *params);

    void BindFragDataLocationEXT(uint program, uint colorNumber,
                                const char *name);
    int GetFragDataLocationEXT(uint program, const char *name);

New Tokens


      VERTEX_ATTRIB_ARRAY_INTEGER_EXT                    0x88FD


      SAMPLER_1D_ARRAY_EXT                               0x8DC0
      SAMPLER_2D_ARRAY_EXT                               0x8DC1
      SAMPLER_BUFFER_EXT                                 0x8DC2
      SAMPLER_1D_ARRAY_SHADOW_EXT                        0x8DC3
      SAMPLER_2D_ARRAY_SHADOW_EXT                        0x8DC4
      SAMPLER_CUBE_SHADOW_EXT                            0x8DC5
      UNSIGNED_INT                                       0x1405
      UNSIGNED_INT_VEC2_EXT                              0x8DC6
      UNSIGNED_INT_VEC3_EXT                              0x8DC7
      UNSIGNED_INT_VEC4_EXT                              0x8DC8
      INT_SAMPLER_1D_EXT                                 0x8DC9
      INT_SAMPLER_2D_EXT                                 0x8DCA
      INT_SAMPLER_3D_EXT                                 0x8DCB
      INT_SAMPLER_CUBE_EXT                               0x8DCC
      INT_SAMPLER_2D_RECT_EXT                            0x8DCD
      INT_SAMPLER_1D_ARRAY_EXT                           0x8DCE
      INT_SAMPLER_2D_ARRAY_EXT                           0x8DCF
      INT_SAMPLER_BUFFER_EXT                             0x8DD0
      UNSIGNED_INT_SAMPLER_1D_EXT                        0x8DD1
      UNSIGNED_INT_SAMPLER_2D_EXT                        0x8DD2
      UNSIGNED_INT_SAMPLER_3D_EXT                        0x8DD3
      UNSIGNED_INT_SAMPLER_CUBE_EXT                      0x8DD4
      UNSIGNED_INT_SAMPLER_2D_RECT_EXT                   0x8DD5
      UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT                  0x8DD6
      UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT                  0x8DD7
      UNSIGNED_INT_SAMPLER_BUFFER_EXT                    0x8DD8


      MIN_PROGRAM_TEXEL_OFFSET_EXT                       0x8904
      MAX_PROGRAM_TEXEL_OFFSET_EXT                       0x8905

