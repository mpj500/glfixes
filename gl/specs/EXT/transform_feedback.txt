Name

    EXT_transform_feedback

Name Strings

    GL_EXT_transform_feedback

Contributors

    Nick Carter
    Charlie Lao
    Jeremy Sandmel
    Cliff Woolley
    Alex Eddy

Contact

    Barthold Lichtenbelt (blichtenbelt 'at' nvidia.com)
    Pat Brown (pbrown 'at' nvidia.com)
    Eric Werness (ewerness 'at' nvidia.com)

Status

    Shipping.

Version

    Last Modified Date:         08/09/2013
    NVIDIA Revision:            8

Number

    352

Dependencies

    The OpenGL Shading Language (GLSL) is required.  OpenGL 2.0 or the
    ARB_shader_objects extension is required.

    EXT_geometry_shader4 trivially interacts with this extension.

    NV_transform_feedback interacts with this extension.

    This extension is written against the OpenGL 2.0 specification.

Overview

    This extension provides a new mode to the GL, called transform feedback,
    which records selected vertex attributes for each primitive processed by
    the GL.  The selected attributes are written into buffer objects, and can
    be written with each attribute in a separate buffer object or with all
    attributes interleaved into a single buffer object.  If a geometry shader
    is active, the primitives recorded are those emitted by the geometry
    shader.  Otherwise, transform feedback captures primitives whose vertices
    are transformed by a vertex shader.  In either case, the primitives
    captured are those generated prior to clipping.  Transform feedback mode
    captures the values of specified varying variables emitted from GLSL
    vertex or geometry shaders.

    The vertex data recorded in transform feedback mode is stored into buffer
    objects as an array of vertex attributes.  The regular representation and
    the use of buffer objects allows the recorded data to be processed
    directly by the GL without requiring CPU intervention to copy data.  In
    particular, transform feedback data can be used for vertex arrays (via
    vertex buffer objects), as the source for pixel data (via pixel buffer
    objects), as shader constant data (via the NV_parameter_buffer_object or
    EXT_bindable_uniform extensions), or via any other extension that makes
    use of buffer objects.

    This extension introduces new query object support to allow transform
    feedback mode to operate asynchronously.  Query objects allow applications
    to determine when transform feedback results are complete, as well as the
    number of primitives processed and written back to buffer objects while in
    transform feedback mode.  This extension also provides a new rasterizer
    discard enable, which allows applications to use transform feedback to
    capture vertex attributes without rendering anything.

New Procedures and Functions

    void BindBufferRangeEXT(enum target, uint index, uint buffer,
                           intptr offset, sizeiptr size);
    void BindBufferOffsetEXT(enum target, uint index, uint buffer,
                            intptr offset);
    void BindBufferBaseEXT(enum target, uint index, uint buffer);

    void BeginTransformFeedbackEXT(enum primitiveMode);
    void EndTransformFeedbackEXT(void);

    void TransformFeedbackVaryingsEXT(uint program, sizei count,
                                      const char * const *varyings, 
                                      enum bufferMode);
    void GetTransformFeedbackVaryingEXT(uint program, uint index,
                                        sizei bufSize, sizei *length, 
                                        sizei *size, enum *type, char *name);

    void GetIntegerIndexedvEXT(enum param, uint index, int *values);
    void GetBooleanIndexedvEXT(enum param, uint index, boolean *values);

    (Note: These indexed query functions are provided in the EXT_draw_buffers2
    extension.  The boolean query is not useful for any queryable value in
    this extension, but is supported for completeness and consistency with
    base GL typed "Get" functions.)

New Tokens


      TRANSFORM_FEEDBACK_BUFFER_EXT                     0x8C8E


      TRANSFORM_FEEDBACK_BUFFER_START_EXT               0x8C84
      TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT                0x8C85


      TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT             0x8C8F


      INTERLEAVED_ATTRIBS_EXT                           0x8C8C
      SEPARATE_ATTRIBS_EXT                              0x8C8D


      PRIMITIVES_GENERATED_EXT                          0x8C87
      TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT         0x8C88


      RASTERIZER_DISCARD_EXT                            0x8C89


      MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
      MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT       0x8C8B
      MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT    0x8C80


      TRANSFORM_FEEDBACK_VARYINGS_EXT                   0x8C83
      TRANSFORM_FEEDBACK_BUFFER_MODE_EXT                0x8C7F
      TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT         0x8C76


