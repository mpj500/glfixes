Name

    EXT_pbuffer

Name Strings

    WGL_EXT_pbuffer

Version

    Date: 1/27/1999   Version 1.6

Number

    171

Dependencies

    WGL_EXT_extensions_string is required.
    WGL_EXT_pixel_format is required.
    WGL_EXT_make_current_read affects the definition of this extension.

Overview

    This extension defines pixel buffers (pbuffer for short). Pbuffers are
    additional non-visible rendering buffers for an OpenGL renderer.
    Pbuffers are equivalent to a window that has the same pixel format
    descriptor with the following exceptions:

    1.  There is no rendering to a pbuffer by GDI.

    2.  The pixel format descriptors used for a pbuffer can only be those
        that are supported by the ICD.  Generic formats are not valid.

    4.  The allocation of a pbuffer can fail if there are insufficient
        resources (i.e., all the pbuffer memory has been allocated).

    The intent of the pbuffer semantics is to enable implementations to
    allocate pbuffers in non-visible frame buffer memory.  These
    pbuffers are intended to be "static" resources in that a program
    will typically allocate them only once rather than as a part of its
    rendering loop.  (Pbuffers should be deallocated when the program is
    no longer using them -- for example, if the program is iconified.)

    The frame buffer resources that are associated with a pbuffer are
    also static and are deallocated only when the pbuffer is destroyed.

New Procedures and Functions

    HPBUFFEREXT wglCreatePbufferEXT(HDC hDC,
                                    int iPixelFormat,
                                    int iWidth,
                                    int iHeight,
                                    const int *piAttribList);

    HDC wglGetPbufferDCEXT(HPBUFFEREXT hPbuffer);

    int wglReleasePbufferDCEXT(HPBUFFEREXT hPbuffer,
                               HDC hDC);

    BOOL wglDestroyPbufferEXT(HPBUFFEREXT hPbuffer);

    BOOL wglQueryPbufferEXT(HPBUFFEREXT hPbuffer,
                            int iAttribute,
                            int *piValue);

New Tokens


      WGL_DRAW_TO_PBUFFER_EXT              0x202D
      WGL_MAX_PBUFFER_PIXELS_EXT           0x202E
      WGL_MAX_PBUFFER_WIDTH_EXT            0x202F
      WGL_MAX_PBUFFER_HEIGHT_EXT           0x2030
      WGL_OPTIMAL_PBUFFER_WIDTH_EXT        0x2031
      WGL_OPTIMAL_PBUFFER_HEIGHT_EXT       0x2032


      WGL_PBUFFER_LARGEST_EXT              0x2033


      WGL_PBUFFER_WIDTH_EXT                0x2034
      WGL_PBUFFER_HEIGHT_EXT               0x2035

