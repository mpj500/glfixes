Name

    EXT_texture_buffer_object

Name Strings

    GL_EXT_texture_buffer_object

Contact

    Pat Brown, NVIDIA Corporation (pbrown 'at' nvidia.com)

Status

    Shipping for GeForce 8 Series (November 2006, Release 95)

Version

    Last Modified Date:         February 21, 2014
    NVIDIA Revision:            8

Number

    330

Dependencies

    OpenGL 2.0 is required.

    NV_gpu_program4 or EXT_gpu_shader4 is required.

    This extension is written against the OpenGL 2.0 specification.

    This extension depends trivially on EXT_texture_array.

    This extension depends trivially on NV_texture_shader.

    This extension depends trivially on EXT_texture_integer.

    This extension depends trivially on ARB_texture_float.

    This extension depends trivially on ARB_half_float_pixel.

    This extension depends trivially on EXT_framebuffer_object,
    ARB_framebuffer_object, and OpenGL 3.0.

Overview

    This extension provides a new texture type, called a buffer texture.
    Buffer textures are one-dimensional arrays of texels whose storage comes
    from an attached buffer object.  When a buffer object is bound to a buffer
    texture, a format is specified, and the data in the buffer object is
    treated as an array of texels of the specified format.

    The use of a buffer object to provide storage allows the texture data to
    be specified in a number of different ways:  via buffer object loads
    (BufferData), direct CPU writes (MapBuffer), framebuffer readbacks
    (EXT_pixel_buffer_object extension).  A buffer object can also be loaded
    by transform feedback (NV_transform_feedback extension), which captures
    selected transformed attributes of vertices processed by the GL.  Several
    of these mechanisms do not require an extra data copy, which would be
    required when using conventional TexImage-like entry points.

    Buffer textures do not support mipmapping, texture lookups with normalized
    floating-point texture coordinates, and texture filtering of any sort, and
    may not be used in fixed-function fragment processing.  They can be
    accessed via single texel fetch operations in programmable shaders.  For
    assembly shaders (NV_gpu_program4), the TXF instruction is used.  For GLSL
    (EXT_gpu_shader4), a new sampler type and texel fetch function are used.

    Buffer textures can be substantially larger than equivalent
    one-dimensional textures; the maximum texture size supported for buffer
    textures in the initial implementation of this extension is 2^27 texels,
    versus 2^13 (8192) texels for otherwise equivalent one-dimensional
    textures.  (Note that this extension only guarantees support for buffer
    textures with 2^16 texels, but we expect most implementations to exceed
    that substantially.)  When a buffer object is attached to a buffer
    texture, a size is not specified; rather, the number of texels in the
    texture is taken by dividing the size of the buffer object by the size of
    each texel.

New Procedures and Functions

    void TexBufferEXT(enum target, enum internalformat, uint buffer);
    
New Tokens


        TEXTURE_BUFFER_EXT                              0x8C2A


        MAX_TEXTURE_BUFFER_SIZE_EXT                     0x8C2B
        TEXTURE_BINDING_BUFFER_EXT                      0x8C2C
        TEXTURE_BUFFER_DATA_STORE_BINDING_EXT           0x8C2D
        TEXTURE_BUFFER_FORMAT_EXT                       0x8C2E

